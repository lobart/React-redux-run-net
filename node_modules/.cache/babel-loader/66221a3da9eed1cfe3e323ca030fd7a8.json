{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SETUSERS = 'SETUSERS';\nconst SETCURRENTPAGE = 'SETCURRENTPAGE';\nconst SETTOTALUSERSCOUNT = 'SETTOTALUSERSCOUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FPROGRESS = 'TOGGLE_IS_FPROGRESS';\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 20,\n  currentPage: 2,\n  isFetching: false,\n  followingProgress: false\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: true\n            };\n          } else {\n            return u;\n          }\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: false\n            };\n          } else {\n            return u;\n          }\n        })\n      };\n\n    case SETUSERS:\n      return { ...state,\n        users: action.users\n      };\n\n    case SETCURRENTPAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SETTOTALUSERSCOUNT:\n      return { ...state,\n        totalUsersCount: action.totalUsersCount\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    case TOGGLE_IS_FPROGRESS:\n      debugger;\n      return { ...state,\n        followingProgress: action.isFetching\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport let follow = userID => ({\n  type: FOLLOW,\n  userID\n});\nexport let unfollow = userID => ({\n  type: UNFOLLOW,\n  userID\n});\nexport let setUsers = users => ({\n  type: SETUSERS,\n  users\n});\nexport let setCurrentPage = currentPage => ({\n  type: SETCURRENTPAGE,\n  currentPage\n});\nexport let setTotalUsersCount = totalUsersCount => ({\n  type: SETTOTALUSERSCOUNT,\n  totalUsersCount\n});\nexport let setToggleIsFetching = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  isFetching\n});\nexport let setToggleIsFProgress = followingProgress => ({\n  type: TOGGLE_IS_FPROGRESS,\n  followingProgress\n});\nexport default usersReducer;","map":{"version":3,"sources":["/home/archi/MyProjects/React-redux-run-net/src/redux/user-reducer.js"],"names":["FOLLOW","UNFOLLOW","SETUSERS","SETCURRENTPAGE","SETTOTALUSERSCOUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FPROGRESS","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","followingProgress","usersReducer","state","action","type","map","u","id","userID","followed","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","setToggleIsFetching","setToggleIsFProgress"],"mappings":"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","sourcesContent":["const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SETUSERS = 'SETUSERS';\nconst SETCURRENTPAGE = 'SETCURRENTPAGE';\nconst SETTOTALUSERSCOUNT = 'SETTOTALUSERSCOUNT';\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FPROGRESS = 'TOGGLE_IS_FPROGRESS';\n\nlet initialState = {\n    users:[],\n    pageSize: 5,\n    totalUsersCount: 20,\n    currentPage: 2,\n    isFetching: false,\n    followingProgress: false\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type){\n        case FOLLOW :\n            return {\n                ...state,\n                users: state.users.map (u => {\n                    if (u.id === action.userID){\n                        return {...u, followed: true};\n                    } else {\n                        return u;\n                    }\n                })\n            }\n        case UNFOLLOW :\n            return {\n                ...state,\n                users: state.users.map (u => {\n                    if (u.id === action.userID){\n                        return {...u, followed: false};\n                    } else {\n                        return u;\n                    }\n                })\n            }\n        case SETUSERS:\n            return {...state, users : action.users};\n        case SETCURRENTPAGE:\n            return {...state, currentPage: action.currentPage};\n        case SETTOTALUSERSCOUNT:\n            return {...state, totalUsersCount: action.totalUsersCount};\n        case TOGGLE_IS_FETCHING:\n            return {...state, isFetching: action.isFetching};\n        case TOGGLE_IS_FPROGRESS:\n            debugger\n            return {...state, followingProgress: action.isFetching};\n        default: return state;\n}}\n\nexport let follow = (userID) => ({type:FOLLOW, userID });\nexport let unfollow = (userID) => ({type:UNFOLLOW, userID});\nexport let setUsers = (users) => ({type: SETUSERS, users});\nexport let setCurrentPage = (currentPage) => ({type: SETCURRENTPAGE, currentPage});\nexport let setTotalUsersCount = (totalUsersCount) => ({type: SETTOTALUSERSCOUNT, totalUsersCount});\nexport let setToggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport let setToggleIsFProgress = (followingProgress) => ({type: TOGGLE_IS_FPROGRESS, followingProgress});\n\nexport default  usersReducer;"]},"metadata":{},"sourceType":"module"}