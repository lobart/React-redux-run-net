{"ast":null,"code":"var _jsxFileName = \"/home/archi/MyProjects/React-redux-run-net/src/components/Users/Users-Container.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { followAC, setCurrentPageAC, setTotalUsersCountAC, setUsersAC, unfollowAC } from \"../../redux/user-reducer\";\nimport axios from \"axios\";\nimport Users from \"./Users\";\nimport loading from \"../../assets/Images/loading.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.setUsers(response.data.items);\n        this.props.setTotalUsersCount(response.data.totalCount);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.setToggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setToggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 38\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        currentPage: this.props.currentPage,\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        onPageChanged: this.onPageChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrentPage: currentPage => {\n      dispatch(setCurrentPageAC(currentPage));\n    },\n    setTotalUsersCount: totalUsersCount => {\n      dispatch(setTotalUsersCountAC(totalUsersCount));\n    },\n    setToggleIsFetching: isFetching => {\n      dispatch(setTotalUsersCountAC(isFetching));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);","map":{"version":3,"sources":["/home/archi/MyProjects/React-redux-run-net/src/components/Users/Users-Container.js"],"names":["React","connect","followAC","setCurrentPageAC","setTotalUsersCountAC","setUsersAC","unfollowAC","axios","Users","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrentPage","get","pageSize","then","response","setUsers","data","items","setTotalUsersCount","totalCount","componentDidMount","setToggleIsFetching","currentPage","render","isFetching","loading","totalUsersCount","users","follow","unfollow","mapStateToProps","state","usersPage","mapDispatchToProps","dispatch","userId"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {followAC, setCurrentPageAC, setTotalUsersCountAC, setUsersAC, unfollowAC} from \"../../redux/user-reducer\";\nimport axios from \"axios\";\nimport Users from \"./Users\";\nimport loading from '../../assets/Images/loading.svg'\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.setToggleIsFetching(true);\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n            this.props.setToggleIsFetching(false);\n            this.props.setUsers(response.data.items);\n            this.props.setTotalUsersCount(response.data.totalCount)\n        })\n    };\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber)\n        axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n            this.props.setUsers(response.data.items);\n            this.props.setTotalUsersCount(response.data.totalCount)\n        })\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ? <img src ={loading} /> : null}\n            <Users currentPage={this.props.currentPage}\n                   totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   onPageChanged={this.onPageChanged}/>\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching\n\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        follow: (userId) => {\n            dispatch(followAC(userId));\n        },\n        unfollow: (userId) => {\n            dispatch(unfollowAC(userId));\n        },\n        setUsers: (users) => {\n            dispatch(setUsersAC(users));\n        },\n        setCurrentPage: (currentPage) => {\n            dispatch(setCurrentPageAC(currentPage))\n        },\n        setTotalUsersCount: (totalUsersCount) => {\n            dispatch(setTotalUsersCountAC(totalUsersCount))\n        },\n        setToggleIsFetching: (isFetching) => {\n            dispatch(setTotalUsersCountAC(isFetching))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UsersContainer);"]},"metadata":{},"sourceType":"module"}