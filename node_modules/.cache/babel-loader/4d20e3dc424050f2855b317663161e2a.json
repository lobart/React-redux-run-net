{"ast":null,"code":"var _jsxFileName = \"/home/archi/MyProjects/React-redux-run-net/src/components/Users/Users-Container.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport userAPI from \"../../api/api\";\nimport { follow, setCurrentPage, setToggleIsFetching, setToggleIsFProgress, setTotalUsersCount, setUsers, unfollow } from \"../../redux/user-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.setToggleIsFetching(true);\n      userAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n        this.props.setToggleIsFetching(false);\n        this.props.setUsers(data.items);\n        this.props.setTotalUsersCount(data.totalCount);\n      });\n    };\n\n    this.onUnfollow = uID => {\n      debugger;\n      this.props.setToggleIsFProgress(true);\n      userAPI.toUnFollow(uID).then(data => {\n        console.log(data);\n\n        if (data.resultCode == 0) {\n          this.props.unfollow(uID);\n        }\n      });\n      this.props.setToggleIsFProgress(false);\n    };\n\n    this.onFollow = uID => {\n      debugger;\n      this.props.setToggleIsFProgress(true);\n      userAPI.toFollow(uID).then(data => {\n        console.log(data);\n\n        if (data.resultCode == 0) {\n          this.props.follow(uID);\n        }\n      });\n      this.props.setToggleIsFProgress(false);\n    };\n  }\n\n  componentDidMount() {\n    this.props.setToggleIsFetching(true);\n    userAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n      this.props.setToggleIsFetching(false);\n      this.props.setUsers(data.items);\n      this.props.setTotalUsersCount(data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, { ...this.props,\n        onPageChanged: this.onPageChanged,\n        onUnfollow: this.onUnfollow,\n        onFollow: this.onFollow\n      }, 'Users', false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingProgress: state.usersPage.followingProgress\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  setToggleIsFetching,\n  setToggleIsFProgress\n})(UsersContainer);","map":{"version":3,"sources":["/home/archi/MyProjects/React-redux-run-net/src/components/Users/Users-Container.js"],"names":["React","connect","Users","Preloader","userAPI","follow","setCurrentPage","setToggleIsFetching","setToggleIsFProgress","setTotalUsersCount","setUsers","unfollow","UsersContainer","Component","onPageChanged","pageNumber","props","getUsers","pageSize","then","data","items","totalCount","onUnfollow","uID","toUnFollow","console","log","resultCode","onFollow","toFollow","componentDidMount","currentPage","render","isFetching","mapStateToProps","state","users","usersPage","totalUsersCount","followingProgress"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport userAPI from \"../../api/api\";\nimport {\n    follow,\n    setCurrentPage,\n    setToggleIsFetching,\n    setToggleIsFProgress,\n    setTotalUsersCount,\n    setUsers,\n    unfollow\n}\nfrom \"../../redux/user-reducer\";\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.setToggleIsFetching(true);\n        userAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n            this.props.setToggleIsFetching(false);\n            this.props.setUsers(data.items);\n            this.props.setTotalUsersCount(data.totalCount)\n        })\n    };\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber)\n        this.props.setToggleIsFetching(true);\n        userAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n            this.props.setToggleIsFetching(false);\n            this.props.setUsers(data.items);\n            this.props.setTotalUsersCount(data.totalCount)\n        })\n    }\n    onUnfollow = (uID) => {\n        debugger\n        this.props.setToggleIsFProgress(true);\n        userAPI.toUnFollow(uID).then(data => {\n            console.log(data);\n            if(data.resultCode == 0){\n                this.props.unfollow(uID)\n            }\n\n        })\n        this.props.setToggleIsFProgress(false);\n    }\n    onFollow = (uID) => {\n        debugger\n        this.props.setToggleIsFProgress(true);\n        userAPI.toFollow(uID).then(data => {\n            console.log(data);\n            if(data.resultCode == 0){\n                this.props.follow(uID)\n            }\n\n        })\n        this.props.setToggleIsFProgress(false);\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ?\n            <Preloader/> : null}\n            <Users key='Users' {...this.props}\n                   onPageChanged={this.onPageChanged}\n                   onUnfollow={this.onUnfollow}\n                   onFollow={this.onFollow}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingProgress: state.usersPage.followingProgress\n    }\n}\n\nexport default connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setUsers,\n    setCurrentPage,\n    setTotalUsersCount,\n    setToggleIsFetching,\n    setToggleIsFProgress})(UsersContainer);"]},"metadata":{},"sourceType":"module"}