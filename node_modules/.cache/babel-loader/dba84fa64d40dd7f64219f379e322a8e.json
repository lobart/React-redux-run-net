{"ast":null,"code":"var _jsxFileName = \"/home/archi/MyProjects/React-redux-run-net/src/components/common/FormsControls/FormsControls.js\";\nimport React from \"react\";\nimport 'antd/dist/antd.css';\nimport { SmileOutlined } from '@ant-design/icons';\nimport { Form, Input, DatePicker, TimePicker, Select, Cascader, InputNumber } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TextArea = ({\n  input,\n  meta,\n  ...props\n}) => {\n  return /*#__PURE__*/_jsxDEV(Form.Item, {\n    validateStatus: \"error\",\n    help: \"Should be combination of numbers & alphabets\",\n    children: /*#__PURE__*/_jsxDEV(\"textarea\", { ...input,\n      ...props,\n      id: \"error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_c = TextArea;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextArea\");","map":{"version":3,"sources":["/home/archi/MyProjects/React-redux-run-net/src/components/common/FormsControls/FormsControls.js"],"names":["React","SmileOutlined","Form","Input","DatePicker","TimePicker","Select","Cascader","InputNumber","TextArea","input","meta","props"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,SAASC,aAAT,QAA8B,mBAA9B;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,EAAkCC,UAAlC,EAA8CC,MAA9C,EAAsDC,QAAtD,EAAgEC,WAAhE,QAAmF,MAAnF;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,IAAR;AAAc,KAAGC;AAAjB,CAAD,KAA6B;AACjD,sBACI,QAAC,IAAD,CAAM,IAAN;AAAiB,IAAA,cAAc,EAAC,OAAhC;AACiB,IAAA,IAAI,EAAC,8CADtB;AAAA,2BAEI,yBAAcF,KAAd;AAAA,SAAyBE,KAAzB;AAAgC,MAAA,EAAE,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CAPM;KAAMH,Q","sourcesContent":["import React from \"react\";\nimport 'antd/dist/antd.css';\nimport { SmileOutlined } from '@ant-design/icons';\nimport { Form, Input, DatePicker, TimePicker, Select, Cascader, InputNumber } from 'antd';\n\nexport const TextArea = ({input, meta, ...props}) => {\n    return (\n        <Form.Item       validateStatus=\"error\"\n                         help=\"Should be combination of numbers & alphabets\">\n            <textarea {...input} {...props} id=\"error\"/>\n        </Form.Item>\n    )\n}"]},"metadata":{},"sourceType":"module"}