{"ast":null,"code":"const ADD_DIALOG = 'ADD-DIALOG';\nlet initialState = {\n  dialogsData: [{\n    \"name\": 'Archi',\n    \"id\": 1\n  }, {\n    \"name\": 'Roma',\n    \"id\": 2\n  }, {\n    \"name\": 'Lex',\n    \"id\": 3\n  }]\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_DIALOG:\n      let newDial = {\n        id: 4,\n        name: action.dialog\n      };\n      state.dialogsData.push(newDial);\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport let addDialogAction = text => {\n  return {\n    type: ADD_DIALOG,\n    text: text\n  };\n};\nexport default dialogsReducer;","map":{"version":3,"sources":["/home/archi/MyProjects/React-redux-run-net/src/redux/dialogs-reducer.js"],"names":["ADD_DIALOG","initialState","dialogsData","dialogsReducer","state","action","type","newDial","id","name","dialog","push","addDialogAction","text"],"mappings":"AAAA,MAAMA,UAAU,GAAG,YAAnB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EACP,CAAC;AAAC,YAAS,OAAV;AAAmB,UAAK;AAAxB,GAAD,EACI;AAAC,YAAS,MAAV;AAAkB,UAAK;AAAvB,GADJ,EAEI;AAAC,YAAS,KAAV;AAAiB,UAAK;AAAtB,GAFJ;AAFW,CAAnB;;AAOA,MAAMC,cAAc,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AACrD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKN,UAAL;AACA,UAAIO,OAAO,GAAG;AACVC,QAAAA,EAAE,EAAE,CADM;AAEVC,QAAAA,IAAI,EAAGJ,MAAM,CAACK;AAFJ,OAAd;AAIAN,MAAAA,KAAK,CAACF,WAAN,CAAkBS,IAAlB,CAAuBJ,OAAvB;AACA,aAAOH,KAAP;;AACA;AAAS,aAAOA,KAAP;AARb;AAUH,CAXD;;AAaA,OAAO,IAAIQ,eAAe,GAAIC,IAAD,IAAU;AACnC,SACI;AAACP,IAAAA,IAAI,EAAEN,UAAP;AAAmBa,IAAAA,IAAI,EAACA;AAAxB,GADJ;AAGH,CAJM;AAMP,eAAeV,cAAf","sourcesContent":["const ADD_DIALOG = 'ADD-DIALOG';\n\nlet initialState = {\n    dialogsData:\n        [{\"name\" : 'Archi', \"id\":1},\n            {\"name\" : 'Roma', \"id\":2},\n            {\"name\" : 'Lex', \"id\":3}]\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch(action.type){\n        case ADD_DIALOG:\n        let newDial = {\n            id: 4,\n            name : action.dialog\n        }\n        state.dialogsData.push(newDial)\n        return state;\n        default: return state;\n    }\n}\n\nexport let addDialogAction = (text) => {\n    return(\n        {type: ADD_DIALOG, text:text}\n    )\n}\n\nexport default dialogsReducer;"]},"metadata":{},"sourceType":"module"}