{"ast":null,"code":"import authReducer from \"./auth-reducer\";\nconst ADD_DIALOG = 'ADD-DIALOG';\nlet initialState = {\n  dialogsData: [{\n    \"name\": 'Archi',\n    \"id\": 1\n  }, {\n    \"name\": 'Roma',\n    \"id\": 2\n  }, {\n    \"name\": 'Lex',\n    \"id\": 3\n  }],\n  auth: authReducer\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_DIALOG:\n      let newDial = {\n        id: 4,\n        name: action.dialog\n      };\n      let stateCopy = { ...state\n      };\n      stateCopy.dialogsData = { ...state.dialogsData\n      };\n      stateCopy.dialogsData.push(newDial);\n      return stateCopy;\n\n    default:\n      return state;\n  }\n};\n\nexport let addDialogAction = text => {\n  return {\n    type: ADD_DIALOG,\n    text: text\n  };\n};\nexport default dialogsReducer;","map":{"version":3,"sources":["/home/archi/MyProjects/React-redux-run-net/src/redux/dialogs-reducer.js"],"names":["authReducer","ADD_DIALOG","initialState","dialogsData","auth","dialogsReducer","state","action","type","newDial","id","name","dialog","stateCopy","push","addDialogAction","text"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AAEA,MAAMC,UAAU,GAAG,YAAnB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EACP,CAAC;AAAC,YAAS,OAAV;AAAmB,UAAK;AAAxB,GAAD,EACI;AAAC,YAAS,MAAV;AAAkB,UAAK;AAAvB,GADJ,EAEI;AAAC,YAAS,KAAV;AAAiB,UAAK;AAAtB,GAFJ,CAFW;AAKfC,EAAAA,IAAI,EAAEJ;AALS,CAAnB;;AAQA,MAAMK,cAAc,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AACrD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKP,UAAL;AACA,UAAIQ,OAAO,GAAG;AACVC,QAAAA,EAAE,EAAE,CADM;AAEVC,QAAAA,IAAI,EAAGJ,MAAM,CAACK;AAFJ,OAAd;AAIA,UAAIC,SAAS,GAAG,EAAC,GAAGP;AAAJ,OAAhB;AACAO,MAAAA,SAAS,CAACV,WAAV,GAAwB,EAAC,GAAGG,KAAK,CAACH;AAAV,OAAxB;AACAU,MAAAA,SAAS,CAACV,WAAV,CAAsBW,IAAtB,CAA2BL,OAA3B;AACA,aAAOI,SAAP;;AACA;AAAS,aAAOP,KAAP;AAVb;AAYH,CAbD;;AAeA,OAAO,IAAIS,eAAe,GAAIC,IAAD,IAAU;AACnC,SACI;AAACR,IAAAA,IAAI,EAAEP,UAAP;AAAmBe,IAAAA,IAAI,EAACA;AAAxB,GADJ;AAGH,CAJM;AAMP,eAAeX,cAAf","sourcesContent":["import authReducer from \"./auth-reducer\";\n\nconst ADD_DIALOG = 'ADD-DIALOG';\n\nlet initialState = {\n    dialogsData:\n        [{\"name\" : 'Archi', \"id\":1},\n            {\"name\" : 'Roma', \"id\":2},\n            {\"name\" : 'Lex', \"id\":3}],\n    auth: authReducer\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch(action.type){\n        case ADD_DIALOG:\n        let newDial = {\n            id: 4,\n            name : action.dialog\n        }\n        let stateCopy = {...state};\n        stateCopy.dialogsData = {...state.dialogsData};\n        stateCopy.dialogsData.push(newDial)\n        return stateCopy;\n        default: return state;\n    }\n}\n\nexport let addDialogAction = (text) => {\n    return(\n        {type: ADD_DIALOG, text:text}\n    )\n}\n\nexport default dialogsReducer;"]},"metadata":{},"sourceType":"module"}