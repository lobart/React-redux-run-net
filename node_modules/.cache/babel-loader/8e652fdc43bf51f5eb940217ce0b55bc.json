{"ast":null,"code":"import { authAPI, profileAPI } from \"../api/api\";\nconst ADD_POST = 'profile/ADD-POST';\nconst UPDATE_TEXT_POST = 'profile/UPDATE-TEXT-POST';\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\nconst SET_STATUS = 'profile/SET_STATUS';\nlet initialState = {\n  contentDataPosts: [{\n    post: 'Hello!'\n  }, {\n    post: 'Everybody!'\n  }, {\n    post: 'Vyshe Ruki!'\n  }, {\n    post: 'Suki Blyadi!'\n  }],\n  newPostText: 'Type new Post!',\n  profile: null,\n  status: \"Status\"\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return { ...state,\n        contentDataPosts: [...state.contentDataPosts, {\n          post: action.text\n        }]\n      };\n\n    case UPDATE_TEXT_POST:\n      return { ...state,\n        newPostText: action.text\n      };\n\n    case SET_USER_PROFILE:\n      return { ...state,\n        profile: action.profile\n      };\n\n    case SET_STATUS:\n      return { ...state,\n        status: action.status\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport let addPostAction = text => {\n  return {\n    type: ADD_POST,\n    text: text\n  };\n};\nexport let updateTextPostAction = text => {\n  return {\n    type: UPDATE_TEXT_POST,\n    text: text\n  };\n};\nexport let setUserProfile = profile => {\n  return {\n    type: SET_USER_PROFILE,\n    profile: profile\n  };\n};\nexport let setStatus = status => {\n  return {\n    type: SET_STATUS,\n    status: status\n  };\n};\nexport let getProfile = uID => async dispatch => {\n  profileAPI.getProfile(uID).then(data => {\n    dispatch(setUserProfile(data));\n  });\n};\nexport let getMyProfile = () => dispatch => {\n  profileAPI.getProfile(15362).then(data => {\n    dispatch(setUserProfile(data));\n  });\n};\nexport let getMyStatus = userId => dispatch => {\n  profileAPI.getStatus(userId).then(response => {\n    dispatch(setStatus(response));\n  });\n};\nexport let updateStatus = status => dispatch => {\n  profileAPI.updateStatus(status).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  });\n};\nexport default profileReducer;","map":{"version":3,"sources":["/home/archi/MyProjects/React-redux-run-net/src/redux/profile-reducer.js"],"names":["authAPI","profileAPI","ADD_POST","UPDATE_TEXT_POST","SET_USER_PROFILE","SET_STATUS","initialState","contentDataPosts","post","newPostText","profile","status","profileReducer","state","action","type","text","addPostAction","updateTextPostAction","setUserProfile","setStatus","getProfile","uID","dispatch","then","data","getMyProfile","getMyStatus","userId","getStatus","response","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import {authAPI, profileAPI} from \"../api/api\";\nconst ADD_POST = 'profile/ADD-POST';\nconst UPDATE_TEXT_POST = 'profile/UPDATE-TEXT-POST';\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\nconst SET_STATUS = 'profile/SET_STATUS';\nlet initialState = {\n    contentDataPosts:\n        [{post: 'Hello!'},\n            {post: 'Everybody!'},\n            {post: 'Vyshe Ruki!'},\n            {post: 'Suki Blyadi!'}],\n    newPostText: 'Type new Post!',\n    profile: null,\n    status: \"Status\"\n}\nconst profileReducer = (state = initialState, action) => {\n    switch(action.type){\n        case ADD_POST:\n            return {\n                ...state,\n                contentDataPosts : [...state.contentDataPosts, {post : action.text}]\n            };\n        case UPDATE_TEXT_POST:\n            return {\n                ...state,\n                newPostText: action.text\n            };\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile\n            };\n        case SET_STATUS:\n            return {\n                ...state,\n                status: action.status\n            };\n        default: return state;\n    }\n\n}\n\nexport let addPostAction = (text) => {\n    return(\n        {type: ADD_POST, text:text}\n    )\n}\n\nexport let updateTextPostAction = (text) => {\n    return(\n        {type: UPDATE_TEXT_POST, text:text}\n    )\n}\n\nexport let setUserProfile = (profile) => {\n    return(\n        {type: SET_USER_PROFILE, profile: profile}\n    )\n}\n\nexport let setStatus = (status) => {\n    return({\n    type: SET_STATUS, status:status}\n    )\n}\nexport let getProfile = (uID) => async (dispatch) => {\n    profileAPI.getProfile(uID).then(data => {\n        dispatch(setUserProfile(data));\n})}\n\nexport let getMyProfile = () =>(dispatch) =>{\n    profileAPI.getProfile(15362).then(data => {\n    dispatch(setUserProfile(data));\n})}\nexport let getMyStatus = (userId) =>(dispatch) => {\n    profileAPI.getStatus(userId).then(response => {\n        dispatch(setStatus(response))\n    })\n}\nexport let updateStatus = (status) =>(dispatch) => {\n    profileAPI.updateStatus(status).then(response => {\n        if(response.data.resultCode === 0) {\n            dispatch(setStatus(status))\n        }\n    })\n}\n\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}