{"ast":null,"code":"var _jsxFileName = \"/home/archi/MyProjects/React-redux-run-net/src/components/Users/Users-Container.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport userAPI from \"../../api/api\";\nimport { follow, getUsers, setCurrentPage, setToggleIsFetching, setToggleIsFProgress, setTotalUsersCount, setUsers, unfollow } from \"../../redux/user-reducer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = currentPage => {\n      this.props.getUsers(currentPage, this.props.pageSize);\n    };\n\n    this.onUnfollow = uID => {\n      this.props.setToggleIsFProgress(true, uID);\n      userAPI.toUnFollow(uID).then(data => {\n        if (data.resultCode == 0) {\n          this.props.unfollow(uID);\n        }\n\n        this.props.setToggleIsFProgress(false, uID);\n      });\n    };\n\n    this.onFollow = uID => {\n      this.props.setToggleIsFProgress(true, uID);\n      userAPI.toFollow(uID).then(data => {\n        if (data.resultCode == 0) {\n          this.props.follow(uID);\n        }\n\n        this.props.setToggleIsFProgress(false, uID);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.getUsers(this.props.currentPage, this.props.pageSize);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, { ...this.props,\n        onPageChanged: this.onPageChanged,\n        onUnfollow: this.onUnfollow,\n        onFollow: this.onFollow\n      }, 'Users', false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingProgress: state.usersPage.followingProgress\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  setToggleIsFetching,\n  setToggleIsFProgress,\n  getUsers\n})(UsersContainer);","map":{"version":3,"sources":["/home/archi/MyProjects/React-redux-run-net/src/components/Users/Users-Container.js"],"names":["React","connect","Users","Preloader","userAPI","follow","getUsers","setCurrentPage","setToggleIsFetching","setToggleIsFProgress","setTotalUsersCount","setUsers","unfollow","UsersContainer","Component","onPageChanged","currentPage","props","pageSize","onUnfollow","uID","toUnFollow","then","data","resultCode","onFollow","toFollow","componentDidMount","render","isFetching","mapStateToProps","state","users","usersPage","totalUsersCount","followingProgress"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport userAPI from \"../../api/api\";\nimport {\n    follow, getUsers,\n    setCurrentPage,\n    setToggleIsFetching,\n    setToggleIsFProgress,\n    setTotalUsersCount,\n    setUsers,\n    unfollow\n} from \"../../redux/user-reducer\";\n\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n    };\n    onPageChanged =  (currentPage) =>{\n        this.props.getUsers(currentPage, this.props.pageSize);\n    };\n\n    onUnfollow = (uID) => {\n        this.props.setToggleIsFProgress(true, uID);\n        userAPI.toUnFollow(uID).then(data => {\n            if(data.resultCode == 0){\n                this.props.unfollow(uID)\n            }\n            this.props.setToggleIsFProgress(false, uID);\n        })\n\n    }\n    onFollow = (uID) => {\n        this.props.setToggleIsFProgress(true, uID);\n        userAPI.toFollow(uID).then(data => {\n            if(data.resultCode == 0){\n                this.props.follow(uID)\n            }\n            this.props.setToggleIsFProgress(false, uID);\n        })\n\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ?\n            <Preloader/> : null}\n            <Users key='Users' {...this.props}\n                   onPageChanged={this.onPageChanged}\n                   onUnfollow={this.onUnfollow}\n                   onFollow={this.onFollow}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingProgress: state.usersPage.followingProgress\n    }\n}\n\nexport default connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setUsers,\n    setCurrentPage,\n    setTotalUsersCount,\n    setToggleIsFetching,\n    setToggleIsFProgress,\n    getUsers\n})(UsersContainer);"]},"metadata":{},"sourceType":"module"}