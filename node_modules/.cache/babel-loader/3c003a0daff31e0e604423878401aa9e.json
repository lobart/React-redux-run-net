{"ast":null,"code":"import userAPI, { profileAPI } from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_TEXT_POST = 'UPDATE-TEXT-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nlet initialState = {\n  contentDataPosts: [{\n    post: 'Hello!'\n  }, {\n    post: 'Everybody!'\n  }, {\n    post: 'Vyshe Ruki!'\n  }, {\n    post: 'Suki Blyadi!'\n  }],\n  newPostText: 'Type new Post!',\n  profile: null,\n  myprofile: null,\n  status: null\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_POST:\n      return { ...state,\n        contentDataPosts: [...state.contentDataPosts, {\n          post: state.newPostText\n        }]\n      };\n\n    case UPDATE_TEXT_POST:\n      return { ...state,\n        newPostText: action.text\n      };\n\n    case SET_USER_PROFILE:\n      return { ...state,\n        profile: action.profile\n      };\n\n    case SET_STATUS:\n      return { ...state,\n        status: action.status\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport let addPostAction = text => {\n  return {\n    type: ADD_POST,\n    text: text\n  };\n};\nexport let updateTextPostAction = text => {\n  return {\n    type: UPDATE_TEXT_POST,\n    text: text\n  };\n};\nexport let setUserProfile = profile => ({\n  type: SET_USER_PROFILE,\n  profile\n});\nexport let setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport let getProfile = uID => dispatch => {\n  userAPI.getProfile(uID).then(data => {\n    dispatch(setUserProfile(data));\n  });\n};\nexport let getMyProfile = () => dispatch => {\n  userAPI.authMe().then(data => {\n    userAPI.getProfile(data.data.id).then(data => {\n      dispatch(setUserProfile(data));\n    });\n  });\n};\nexport let getMyStatus = userId => dispatch => {\n  profileAPI.getStatus(userId).then(response => {\n    debugger;\n    dispatch(setStatus(response.data.status));\n  });\n};\nexport let updateStatus = status => dispatch => {\n  profileAPI.updateStatus(status).then(response => {\n    debugger;\n\n    if (response.data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  });\n};\nexport default profileReducer;","map":{"version":3,"sources":["/home/archi/MyProjects/React-redux-run-net/src/redux/profile-reducer.js"],"names":["userAPI","profileAPI","ADD_POST","UPDATE_TEXT_POST","SET_USER_PROFILE","SET_STATUS","initialState","contentDataPosts","post","newPostText","profile","myprofile","status","profileReducer","state","action","type","text","addPostAction","updateTextPostAction","setUserProfile","setStatus","getProfile","uID","dispatch","then","data","getMyProfile","authMe","id","getMyStatus","userId","getStatus","response","updateStatus","resultCode"],"mappings":"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","sourcesContent":["import userAPI, {profileAPI} from \"../api/api\";\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_TEXT_POST = 'UPDATE-TEXT-POST';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nlet initialState = {\n    contentDataPosts:\n        [{post: 'Hello!'},\n            {post: 'Everybody!'},\n            {post: 'Vyshe Ruki!'},\n            {post: 'Suki Blyadi!'}],\n    newPostText: 'Type new Post!',\n    profile: null,\n    myprofile: null,\n    status: null\n}\nconst profileReducer = (state = initialState, action) => {\n    switch(action.type){\n        case ADD_POST:\n            return {\n                ...state,\n                contentDataPosts : [...state.contentDataPosts, {post : state.newPostText}]\n            };\n        case UPDATE_TEXT_POST:\n            return {\n                ...state,\n                newPostText: action.text\n            };\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile\n            };\n        case SET_STATUS:\n            return {\n                ...state,\n                status: action.status\n            };\n        default: return state;\n    }\n\n}\n\nexport let addPostAction = (text) => {\n    return(\n        {type: ADD_POST, text:text}\n    )\n}\n\nexport let updateTextPostAction = (text) => {\n    return(\n        {type: UPDATE_TEXT_POST, text:text}\n    )\n}\n\nexport let setUserProfile = (profile) => ({\n    type: SET_USER_PROFILE, profile\n})\n\nexport let setStatus = (status) => ({\n    type: SET_STATUS, status\n})\nexport let getProfile = (uID) => (dispatch) => {\n    userAPI.getProfile(uID).then(data => {\n        dispatch(setUserProfile(data));\n})}\n\nexport let getMyProfile = () =>(dispatch) =>{\n    userAPI.authMe().then(data => {\n    userAPI.getProfile(data.data.id).then(data => {\n        dispatch(setUserProfile(data));\n    })\n})}\nexport let getMyStatus = (userId) =>(dispatch) => {\n    profileAPI.getStatus(userId).then(response => {\n        debugger\n        dispatch(setStatus(response.data.status))\n    })\n}\nexport let updateStatus = (status) =>(dispatch) => {\n    profileAPI.updateStatus(status).then(response => {\n        debugger\n        if(response.data.resultCode === 0) {\n            dispatch(setStatus(status))\n        }\n    })\n}\n\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}