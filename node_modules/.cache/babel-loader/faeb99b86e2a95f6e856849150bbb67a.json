{"ast":null,"code":"const ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_TEXT_MESSAGE = 'UPDATE-TEXT-MESSAGE';\n\nconst messageReducer = (state, action) => {\n  switch (action.type) {\n    case ADD_MESSAGE:\n      let newMessage = {\n        message: action.text\n      };\n      state.messagesData.push(newMessage);\n      return state;\n\n    case UPDATE_TEXT_MESSAGE:\n      state.newMessageText = action.text;\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport let addMessageAction = text => {\n  return {\n    type: ADD_MESSAGE,\n    text: text\n  };\n};\nexport let updateTextMessageAction = text => {\n  return {\n    type: UPDATE_TEXT_MESSAGE,\n    text: text\n  };\n};\nexport default messageReducer;","map":{"version":3,"sources":["/home/archi/MyProjects/React-redux-run-net/src/redux/message-reducer.js"],"names":["ADD_MESSAGE","UPDATE_TEXT_MESSAGE","messageReducer","state","action","type","newMessage","message","text","messagesData","push","newMessageText","addMessageAction","updateTextMessageAction"],"mappings":"AAAA,MAAMA,WAAW,GAAG,aAApB;AACA,MAAMC,mBAAmB,GAAG,qBAA5B;;AAGA,MAAMC,cAAc,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACtC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKL,WAAL;AACI,UAAIM,UAAU,GAAG;AACbC,QAAAA,OAAO,EAAEH,MAAM,CAACI;AADH,OAAjB;AAGAL,MAAAA,KAAK,CAACM,YAAN,CAAmBC,IAAnB,CAAwBJ,UAAxB;AACA,aAAOH,KAAP;;AAEJ,SAAKF,mBAAL;AACIE,MAAAA,KAAK,CAACQ,cAAN,GAAuBP,MAAM,CAACI,IAA9B;AACA,aAAOL,KAAP;;AACJ;AAAS,aAAOA,KAAP;AAXb;AAaH,CAdD;;AAgBA,OAAO,IAAIS,gBAAgB,GAAIJ,IAAD,IAAU;AACpC,SACI;AAACH,IAAAA,IAAI,EAAEL,WAAP;AAAoBQ,IAAAA,IAAI,EAACA;AAAzB,GADJ;AAGH,CAJM;AAKP,OAAO,IAAIK,uBAAuB,GAAIL,IAAD,IAAU;AAC3C,SACI;AAACH,IAAAA,IAAI,EAAEJ,mBAAP;AAA4BO,IAAAA,IAAI,EAACA;AAAjC,GADJ;AAGH,CAJM;AAMP,eAAeN,cAAf","sourcesContent":["const ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_TEXT_MESSAGE = 'UPDATE-TEXT-MESSAGE';\n\n\nconst messageReducer = (state, action) => {\n    switch(action.type){\n        case ADD_MESSAGE:\n            let newMessage = {\n                message: action.text\n            }\n            state.messagesData.push(newMessage);\n            return state;\n\n        case UPDATE_TEXT_MESSAGE:\n            state.newMessageText = action.text;\n            return state;\n        default: return state;\n    }\n}\n\nexport let addMessageAction = (text) => {\n    return(\n        {type: ADD_MESSAGE, text:text}\n    )\n}\nexport let updateTextMessageAction = (text) => {\n    return(\n        {type: UPDATE_TEXT_MESSAGE, text:text}\n    )\n}\n\nexport default messageReducer;"]},"metadata":{},"sourceType":"module"}