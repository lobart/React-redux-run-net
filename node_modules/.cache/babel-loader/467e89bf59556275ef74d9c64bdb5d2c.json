{"ast":null,"code":"import postReducer from \"./post-reducer\";\nimport messageReducer from \"./message-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\nconst GET_STATE = 'GET-STATE';\nconst ADD_DIALOG = 'ADD-DIALOG';\nconst ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_TEXT_MESSAGE = 'UPDATE-TEXT-MESSAGE';\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_TEXT_POST = 'UPDATE-TEXT-POST';\nlet store = {\n  _state: {\n    dialogsData: [{\n      \"name\": 'Archi',\n      \"id\": 1\n    }, {\n      \"name\": 'Roma',\n      \"id\": 2\n    }, {\n      \"name\": 'Lex',\n      \"id\": 3\n    }],\n    postsPage: {\n      contentDataPosts: [{\n        post: 'Hello!'\n      }, {\n        post: 'Everybody!'\n      }, {\n        post: 'Vyshe Ruki!'\n      }, {\n        post: 'Suki Blyadi!'\n      }],\n      newPostText: 'Type new Post!'\n    },\n    messagesPage: {\n      messagesData: [{\n        message: 'Hello!'\n      }, {\n        message: 'Salut!'\n      }, {\n        message: 'Ty zdes!'\n      }],\n      newMessageText: 'Type new message!'\n    },\n    navData: [{\n      name: 'Dialog',\n      url: '/dialogs'\n    }, {\n      name: 'Profile',\n      url: '/profile'\n    }, {\n      name: 'Friends',\n      url: '/friends'\n    }, {\n      name: 'Competitions',\n      url: '/competitions'\n    }]\n  },\n\n  _subscriber() {},\n\n  subscribe(observer) {\n    this._subscriber = observer;\n  },\n\n  dispatch(action) {\n    this._state.contentDataPosts = postReducer(this._state.postsPage, action);\n    this._state.messagesData = messageReducer(this._state.messagesPage, action);\n    this._state.dialogsData = dialogsReducer(this._state.dialogsData, action);\n\n    if (action.type === GET_STATE) {\n      return this._state;\n    }\n\n    this._subscriber(this);\n  }\n\n};\nexport let addPostAction = text => {\n  return {\n    type: ADD_POST,\n    text: text\n  };\n};\nexport let addMessageAction = text => {\n  return {\n    type: ADD_MESSAGE,\n    text: text\n  };\n};\nexport let addDialogAction = text => {\n  return {\n    type: ADD_DIALOG,\n    text: text\n  };\n};\nexport let updateTextPostAction = text => {\n  return {\n    type: UPDATE_TEXT_POST,\n    text: text\n  };\n};\nexport let updateTextMessageAction = text => {\n  return {\n    type: UPDATE_TEXT_MESSAGE,\n    text: text\n  };\n};\nexport let getStateAction = () => {\n  return {\n    type: GET_STATE\n  };\n};\nexport default store;","map":{"version":3,"sources":["/home/archi/MyProjects/React-redux-run-net/src/redux/state.js"],"names":["postReducer","messageReducer","dialogsReducer","GET_STATE","ADD_DIALOG","ADD_MESSAGE","UPDATE_TEXT_MESSAGE","ADD_POST","UPDATE_TEXT_POST","store","_state","dialogsData","postsPage","contentDataPosts","post","newPostText","messagesPage","messagesData","message","newMessageText","navData","name","url","_subscriber","subscribe","observer","dispatch","action","type","addPostAction","text","addMessageAction","addDialogAction","updateTextPostAction","updateTextMessageAction","getStateAction"],"mappings":"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","sourcesContent":["import postReducer from \"./post-reducer\";\nimport messageReducer from \"./message-reducer\";\nimport dialogsReducer from \"./dialogs-reducer\";\n\nconst GET_STATE = 'GET-STATE';\nconst ADD_DIALOG = 'ADD-DIALOG';\n\nconst ADD_MESSAGE = 'ADD-MESSAGE';\nconst UPDATE_TEXT_MESSAGE = 'UPDATE-TEXT-MESSAGE';\n\nconst ADD_POST = 'ADD-POST';\nconst UPDATE_TEXT_POST = 'UPDATE-TEXT-POST';\n\n\nlet store = {\n\n    _state :{\n        dialogsData:\n            [{\"name\" : 'Archi', \"id\":1},\n            {\"name\" : 'Roma', \"id\":2},\n            {\"name\" : 'Lex', \"id\":3}],\n        postsPage: {\n            contentDataPosts:\n                [{post: 'Hello!'},\n                {post: 'Everybody!'},\n                {post: 'Vyshe Ruki!'},\n                {post: 'Suki Blyadi!'}],\n            newPostText: 'Type new Post!'\n        },\n        messagesPage: {\n            messagesData: [\n                {message: 'Hello!'},\n                {message: 'Salut!'},\n                {message: 'Ty zdes!'}\n            ],\n            newMessageText: 'Type new message!'\n        },\n        navData:[\n            {name: 'Dialog', url:'/dialogs'},\n            {name: 'Profile', url: '/profile'},\n            {name: 'Friends', url: '/friends'},\n            {name: 'Competitions', url: '/competitions'},\n\n        ]\n    },\n    _subscriber(){\n\n    },\n    subscribe(observer){\n        this._subscriber=observer;\n    },\n    dispatch(action){\n        this._state.contentDataPosts = postReducer(this._state.postsPage, action);\n        this._state.messagesData = messageReducer(this._state.messagesPage, action);\n        this._state.dialogsData = dialogsReducer(this._state.dialogsData, action);\n        if (action.type === GET_STATE){\n            return(this._state);\n        }\n        this._subscriber(this);\n    }\n}\n\nexport let addPostAction = (text) => {\n        return(\n            {type: ADD_POST, text:text}\n        )\n}\nexport let addMessageAction = (text) => {\n        return(\n            {type: ADD_MESSAGE, text:text}\n        )\n}\nexport let addDialogAction = (text) => {\n    return(\n        {type: ADD_DIALOG, text:text}\n    )\n}\nexport let updateTextPostAction = (text) => {\n    return(\n        {type: UPDATE_TEXT_POST, text:text}\n    )\n}\nexport let updateTextMessageAction = (text) => {\n    return(\n        {type: UPDATE_TEXT_MESSAGE, text:text}\n    )\n}\nexport let getStateAction= () => {\n    return({type: GET_STATE})\n}\nexport default store;"]},"metadata":{},"sourceType":"module"}