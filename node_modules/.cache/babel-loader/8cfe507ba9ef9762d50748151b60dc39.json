{"ast":null,"code":"var _jsxFileName = \"/home/archi/MyProjects/React-redux-run-net/src/components/Users/Users-Container.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { follow, setCurrentPage, setToggleIsFetching, setToggleIsFProgress, setTotalUsersCount, setUsers, unfollow } from \"../../redux/user-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport userAPI from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.setToggleIsFetching(true);\n      userAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n        this.props.setToggleIsFetching(false);\n        this.props.setUsers(data.items);\n        this.props.setTotalUsersCount(data.totalCount);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.setToggleIsFetching(true);\n    userAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n      this.props.setToggleIsFetching(false);\n      this.props.setUsers(data.items);\n      this.props.setTotalUsersCount(data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, { ...this.props,\n        onPageChanged: this.onPageChanged\n      }, 'Users', false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n    followingProgress: state.usersPage.followingProgress\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  setToggleIsFetching,\n  setToggleIsFProgress\n})(UsersContainer);","map":{"version":3,"sources":["/home/archi/MyProjects/React-redux-run-net/src/components/Users/Users-Container.js"],"names":["React","connect","follow","setCurrentPage","setToggleIsFetching","setToggleIsFProgress","setTotalUsersCount","setUsers","unfollow","Users","Preloader","userAPI","UsersContainer","Component","onPageChanged","pageNumber","props","getUsers","pageSize","then","data","items","totalCount","componentDidMount","currentPage","render","isFetching","mapStateToProps","state","users","usersPage","totalUsersCount","followingProgress"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,MADJ,EAEIC,cAFJ,EAGIC,mBAHJ,EAIIC,oBAJJ,EAKIC,kBALJ,EAMIC,QANJ,EAOIC,QAPJ,QASK,0BATL;AAUA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,OAAP,MAAoB,eAApB;;;;AACA,MAAMC,cAAN,SAA6BZ,KAAK,CAACa,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAUzCC,aAVyC,GAUxBC,UAAD,IAAgB;AAC5B,WAAKC,KAAL,CAAWb,cAAX,CAA0BY,UAA1B;AACA,WAAKC,KAAL,CAAWZ,mBAAX,CAA+B,IAA/B;AACAO,MAAAA,OAAO,CAACM,QAAR,CAAiBF,UAAjB,EAA6B,KAAKC,KAAL,CAAWE,QAAxC,EAAkDC,IAAlD,CAAuDC,IAAI,IAAI;AAC3D,aAAKJ,KAAL,CAAWZ,mBAAX,CAA+B,KAA/B;AACA,aAAKY,KAAL,CAAWT,QAAX,CAAoBa,IAAI,CAACC,KAAzB;AACA,aAAKL,KAAL,CAAWV,kBAAX,CAA8Bc,IAAI,CAACE,UAAnC;AACH,OAJD;AAKH,KAlBwC;AAAA;;AACzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKP,KAAL,CAAWZ,mBAAX,CAA+B,IAA/B;AACAO,IAAAA,OAAO,CAACM,QAAR,CAAiB,KAAKD,KAAL,CAAWQ,WAA5B,EAAyC,KAAKR,KAAL,CAAWE,QAApD,EAA8DC,IAA9D,CAAmEC,IAAI,IAAI;AACvE,WAAKJ,KAAL,CAAWZ,mBAAX,CAA+B,KAA/B;AACA,WAAKY,KAAL,CAAWT,QAAX,CAAoBa,IAAI,CAACC,KAAzB;AACA,WAAKL,KAAL,CAAWV,kBAAX,CAA8Bc,IAAI,CAACE,UAAnC;AACH,KAJD;AAKH;;AAYDG,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,iBACF,KAAKT,KAAL,CAAWU,UAAX,gBACD,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADC,GACc,IAFZ,eAGH,QAAC,KAAD,OAAuB,KAAKV,KAA5B;AACO,QAAA,aAAa,EAAE,KAAKF;AAD3B,SAAW,OAAX;AAAA;AAAA;AAAA;AAAA,cAHG;AAAA,oBAAP;AAOH;;AA5BwC;;AA+B7C,IAAIa,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHC,IAAAA,KAAK,EAAED,KAAK,CAACE,SAAN,CAAgBD,KADpB;AAEHX,IAAAA,QAAQ,EAAEU,KAAK,CAACE,SAAN,CAAgBZ,QAFvB;AAGHa,IAAAA,eAAe,EAAEH,KAAK,CAACE,SAAN,CAAgBC,eAH9B;AAIHP,IAAAA,WAAW,EAAEI,KAAK,CAACE,SAAN,CAAgBN,WAJ1B;AAKHE,IAAAA,UAAU,EAAEE,KAAK,CAACE,SAAN,CAAgBJ,UALzB;AAMHM,IAAAA,iBAAiB,EAAEJ,KAAK,CAACE,SAAN,CAAgBE;AANhC,GAAP;AAQH,CATD;;AAWA,eAAe/B,OAAO,CAAC0B,eAAD,EAAkB;AACpCzB,EAAAA,MADoC;AAEpCM,EAAAA,QAFoC;AAGpCD,EAAAA,QAHoC;AAIpCJ,EAAAA,cAJoC;AAKpCG,EAAAA,kBALoC;AAMpCF,EAAAA,mBANoC;AAOpCC,EAAAA;AAPoC,CAAlB,CAAP,CAOYO,cAPZ,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    follow,\n    setCurrentPage,\n    setToggleIsFetching,\n    setToggleIsFProgress,\n    setTotalUsersCount,\n    setUsers,\n    unfollow\n}\nfrom \"../../redux/user-reducer\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport userAPI from \"../../api/api\";\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.setToggleIsFetching(true);\n        userAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n            this.props.setToggleIsFetching(false);\n            this.props.setUsers(data.items);\n            this.props.setTotalUsersCount(data.totalCount)\n        })\n    };\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber)\n        this.props.setToggleIsFetching(true);\n        userAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n            this.props.setToggleIsFetching(false);\n            this.props.setUsers(data.items);\n            this.props.setTotalUsersCount(data.totalCount)\n        })\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ?\n            <Preloader/> : null}\n            <Users key='Users' {...this.props}\n                   onPageChanged={this.onPageChanged}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching,\n        followingProgress: state.usersPage.followingProgress\n    }\n}\n\nexport default connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setUsers,\n    setCurrentPage,\n    setTotalUsersCount,\n    setToggleIsFetching,\n    setToggleIsFProgress})(UsersContainer);"]},"metadata":{},"sourceType":"module"}