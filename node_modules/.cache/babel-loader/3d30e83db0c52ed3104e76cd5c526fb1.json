{"ast":null,"code":"var _jsxFileName = \"/home/archi/MyProjects/React-redux-run-net/src/components/Users/Users-Container.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { follow, setCurrentPage, setToggleIsFetching, setTotalUsersCount, setUsers, unfollow } from \"../../redux/user-reducer\";\nimport axios from \"axios\";\nimport Users from \"./Users\";\nimport loading from \"../../assets/Images/loading.svg\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport getUsers from \"../../api/api\";\nimport userAPI from \"../../api/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrentPage(pageNumber);\n      this.props.setToggleIsFetching(true);\n      userAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n        this.props.setToggleIsFetching(false);\n        this.props.setUsers(data.items);\n        this.props.setTotalUsersCount(data.totalCount);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.setToggleIsFetching(true);\n    userAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n      this.props.setToggleIsFetching(false);\n      this.props.setUsers(data.items);\n      this.props.setTotalUsersCount(data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        currentPage: this.props.currentPage,\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow,\n        onPageChanged: this.onPageChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  setToggleIsFetching\n})(UsersContainer);","map":{"version":3,"sources":["/home/archi/MyProjects/React-redux-run-net/src/components/Users/Users-Container.js"],"names":["React","connect","follow","setCurrentPage","setToggleIsFetching","setTotalUsersCount","setUsers","unfollow","axios","Users","Preloader","getUsers","userAPI","UsersContainer","Component","onPageChanged","pageNumber","props","pageSize","then","data","items","totalCount","componentDidMount","currentPage","render","isFetching","totalUsersCount","users","mapStateToProps","state","usersPage"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SACIC,MADJ,EAEIC,cAFJ,EAGIC,mBAHJ,EAIIC,kBAJJ,EAKIC,QALJ,EAMIC,QANJ,QAQK,0BARL;AASA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,SAAlB;;AAEA,OAAOC,SAAP,MAAsB,+BAAtB;AACA,OAAOC,QAAP,MAAqB,eAArB;AACA,OAAOC,OAAP,MAAoB,eAApB;;;;AACA,MAAMC,cAAN,SAA6Bb,KAAK,CAACc,SAAnC,CAA6C;AAAA;AAAA;;AAAA,SAUzCC,aAVyC,GAUxBC,UAAD,IAAgB;AAC5B,WAAKC,KAAL,CAAWd,cAAX,CAA0Ba,UAA1B;AACA,WAAKC,KAAL,CAAWb,mBAAX,CAA+B,IAA/B;AACAQ,MAAAA,OAAO,CAACD,QAAR,CAAiBK,UAAjB,EAA6B,KAAKC,KAAL,CAAWC,QAAxC,EAAkDC,IAAlD,CAAuDC,IAAI,IAAI;AAC3D,aAAKH,KAAL,CAAWb,mBAAX,CAA+B,KAA/B;AACA,aAAKa,KAAL,CAAWX,QAAX,CAAoBc,IAAI,CAACC,KAAzB;AACA,aAAKJ,KAAL,CAAWZ,kBAAX,CAA8Be,IAAI,CAACE,UAAnC;AACH,OAJD;AAKH,KAlBwC;AAAA;;AACzCC,EAAAA,iBAAiB,GAAG;AAChB,SAAKN,KAAL,CAAWb,mBAAX,CAA+B,IAA/B;AACAQ,IAAAA,OAAO,CAACD,QAAR,CAAiB,KAAKM,KAAL,CAAWO,WAA5B,EAAyC,KAAKP,KAAL,CAAWC,QAApD,EAA8DC,IAA9D,CAAmEC,IAAI,IAAI;AACvE,WAAKH,KAAL,CAAWb,mBAAX,CAA+B,KAA/B;AACA,WAAKa,KAAL,CAAWX,QAAX,CAAoBc,IAAI,CAACC,KAAzB;AACA,WAAKJ,KAAL,CAAWZ,kBAAX,CAA8Be,IAAI,CAACE,UAAnC;AACH,KAJD;AAKH;;AAYDG,EAAAA,MAAM,GAAG;AACL,wBAAO;AAAA,iBACF,KAAKR,KAAL,CAAWS,UAAX,gBACD,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,cADC,GACc,IAFZ,eAGH,QAAC,KAAD;AAAO,QAAA,WAAW,EAAE,KAAKT,KAAL,CAAWO,WAA/B;AACO,QAAA,eAAe,EAAE,KAAKP,KAAL,CAAWU,eADnC;AAEO,QAAA,QAAQ,EAAE,KAAKV,KAAL,CAAWC,QAF5B;AAGO,QAAA,KAAK,EAAE,KAAKD,KAAL,CAAWW,KAHzB;AAIO,QAAA,MAAM,EAAE,KAAKX,KAAL,CAAWf,MAJ1B;AAKO,QAAA,QAAQ,EAAE,KAAKe,KAAL,CAAWV,QAL5B;AAMO,QAAA,aAAa,EAAE,KAAKQ;AAN3B;AAAA;AAAA;AAAA;AAAA,cAHG;AAAA,oBAAP;AAWH;;AAhCwC;;AAmC7C,IAAIc,eAAe,GAAIC,KAAD,IAAW;AAC7B,SAAO;AACHF,IAAAA,KAAK,EAAEE,KAAK,CAACC,SAAN,CAAgBH,KADpB;AAEHV,IAAAA,QAAQ,EAAEY,KAAK,CAACC,SAAN,CAAgBb,QAFvB;AAGHS,IAAAA,eAAe,EAAEG,KAAK,CAACC,SAAN,CAAgBJ,eAH9B;AAIHH,IAAAA,WAAW,EAAEM,KAAK,CAACC,SAAN,CAAgBP,WAJ1B;AAKHE,IAAAA,UAAU,EAAEI,KAAK,CAACC,SAAN,CAAgBL;AALzB,GAAP;AAQH,CATD;;AAWA,eAAezB,OAAO,CAAC4B,eAAD,EAAkB;AACpC3B,EAAAA,MADoC;AAEpCK,EAAAA,QAFoC;AAGpCD,EAAAA,QAHoC;AAIpCH,EAAAA,cAJoC;AAKpCE,EAAAA,kBALoC;AAMpCD,EAAAA;AANoC,CAAlB,CAAP,CAMWS,cANX,CAAf","sourcesContent":["import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {\n    follow,\n    setCurrentPage,\n    setToggleIsFetching,\n    setTotalUsersCount,\n    setUsers,\n    unfollow\n}\nfrom \"../../redux/user-reducer\";\nimport axios from \"axios\";\nimport Users from \"./Users\";\nimport loading from '../../assets/Images/loading.svg'\nimport Preloader from \"../common/Preloader/Preloader\";\nimport getUsers from \"../../api/api\";\nimport userAPI from \"../../api/api\";\nclass UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.setToggleIsFetching(true);\n        userAPI.getUsers(this.props.currentPage, this.props.pageSize).then(data => {\n            this.props.setToggleIsFetching(false);\n            this.props.setUsers(data.items);\n            this.props.setTotalUsersCount(data.totalCount)\n        })\n    };\n\n    onPageChanged = (pageNumber) => {\n        this.props.setCurrentPage(pageNumber)\n        this.props.setToggleIsFetching(true);\n        userAPI.getUsers(pageNumber, this.props.pageSize).then(data => {\n            this.props.setToggleIsFetching(false);\n            this.props.setUsers(data.items);\n            this.props.setTotalUsersCount(data.totalCount)\n        })\n    }\n\n    render() {\n        return <>\n            {this.props.isFetching ?\n            <Preloader/> : null}\n            <Users currentPage={this.props.currentPage}\n                   totalUsersCount={this.props.totalUsersCount}\n                   pageSize={this.props.pageSize}\n                   users={this.props.users}\n                   follow={this.props.follow}\n                   unfollow={this.props.unfollow}\n                   onPageChanged={this.onPageChanged}/>\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: state.usersPage.users,\n        pageSize: state.usersPage.pageSize,\n        totalUsersCount: state.usersPage.totalUsersCount,\n        currentPage: state.usersPage.currentPage,\n        isFetching: state.usersPage.isFetching\n\n    }\n}\n\nexport default connect(mapStateToProps, {\n    follow,\n    unfollow,\n    setUsers,\n    setCurrentPage,\n    setTotalUsersCount,\n    setToggleIsFetching})(UsersContainer);"]},"metadata":{},"sourceType":"module"}