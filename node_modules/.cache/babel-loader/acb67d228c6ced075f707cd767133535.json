{"ast":null,"code":"var _jsxFileName = \"/home/archi/MyProjects/React-redux-run-net/src/components/Profile/Profile-container.js\";\nimport React from \"react\";\nimport Profile from \"./Profile\";\nimport { connect } from \"react-redux\";\nimport { getStatus, getProfile, setUserProfile, updateStatus } from \"../../redux/profile-reducer\";\nimport { withRouter } from \"react-router\";\nimport { withAuthRedirect } from \"../hoc/withAuthRedirect\";\nimport { compose } from \"redux\";\nimport { getAuthUserData } from \"../../redux/auth-reducer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet mapStateToProps = state => ({\n  profile: state.profilePage.profile,\n  status: state.profilePage.status,\n  isAuth: state.auth.isAuth,\n  authUserId: state.auth.userId\n});\n\nclass ProfileContainer extends React.Component {\n  componentDidMount() {\n    let uID = this.props.match.params.userID;\n    if (!uID) uID = this.props.authUserId;\n    console.log(\"Mount\");\n    this.props.getProfile(uID);\n    this.props.getStatus(uID);\n  }\n\n  componentWillUnmount() {\n    console.log(\"Unmount\");\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    if (prevProps.match.params.userID !== this.props.match.params.userID) {\n      this.props.getProfile(this.props.match.params.userID);\n      this.props.getStatus(this.props.match.params.userID);\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Profile, { ...this.props,\n        profile: this.props.profile,\n        status: this.props.status,\n        updateStatus: this.props.updateStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default compose(connect(mapStateToProps, {\n  setUserProfile,\n  getProfile,\n  getStatus,\n  updateStatus,\n  getAuthUserData\n}), withAuthRedirect, withRouter)(ProfileContainer);","map":{"version":3,"sources":["/home/archi/MyProjects/React-redux-run-net/src/components/Profile/Profile-container.js"],"names":["React","Profile","connect","getStatus","getProfile","setUserProfile","updateStatus","withRouter","withAuthRedirect","compose","getAuthUserData","ProfileInfo","mapStateToProps","state","profile","profilePage","status","isAuth","auth","authUserId","userId","ProfileContainer","Component","componentDidMount","uID","props","match","params","userID","console","log","componentWillUnmount","componentDidUpdate","prevProps","prevState","snapshot","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,SAAQC,SAAR,EAAmBC,UAAnB,EAA+BC,cAA/B,EAA+CC,YAA/C,QAAkE,6BAAlE;AACA,SAAQC,UAAR,QAAyB,cAAzB;AACA,SAAQC,gBAAR,QAA+B,yBAA/B;AACA,SAAQC,OAAR,QAAsB,OAAtB;AACA,SAAQC,eAAR,QAA8B,0BAA9B;AACA,OAAOC,WAAP,MAAwB,2BAAxB;;;AAEA,IAAIC,eAAe,GAAIC,KAAD,KAAY;AAC9BC,EAAAA,OAAO,EAAED,KAAK,CAACE,WAAN,CAAkBD,OADG;AAE9BE,EAAAA,MAAM,EAAEH,KAAK,CAACE,WAAN,CAAkBC,MAFI;AAG9BC,EAAAA,MAAM,EAAEJ,KAAK,CAACK,IAAN,CAAWD,MAHW;AAI9BE,EAAAA,UAAU,EAAEN,KAAK,CAACK,IAAN,CAAWE;AAJO,CAAZ,CAAtB;;AAOA,MAAMC,gBAAN,SAA+BrB,KAAK,CAACsB,SAArC,CAA8C;AAE1CC,EAAAA,iBAAiB,GAAG;AAChB,QAAIC,GAAG,GAAC,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAAhC;AACA,QAAI,CAACJ,GAAL,EAAUA,GAAG,GAAC,KAAKC,KAAL,CAAWN,UAAf;AACVU,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA,SAAKL,KAAL,CAAWrB,UAAX,CAAsBoB,GAAtB;AACA,SAAKC,KAAL,CAAWtB,SAAX,CAAqBqB,GAArB;AACH;;AACDO,EAAAA,oBAAoB,GAAE;AAClBF,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH;;AACDE,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C,QAAGF,SAAS,CAACP,KAAV,CAAgBC,MAAhB,CAAuBC,MAAvB,KAAkC,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAA7D,EAAoE;AAChE,WAAKH,KAAL,CAAWrB,UAAX,CAAsB,KAAKqB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAA9C;AACA,WAAKH,KAAL,CAAWtB,SAAX,CAAqB,KAAKsB,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,MAA7C;AACH;AACJ;;AACDQ,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,6BACI,QAAC,OAAD,OAAa,KAAKX,KAAlB;AAAyB,QAAA,OAAO,EAAI,KAAKA,KAAL,CAAWX,OAA/C;AAAwD,QAAA,MAAM,EAAI,KAAKW,KAAL,CAAWT,MAA7E;AAAqF,QAAA,YAAY,EAAI,KAAKS,KAAL,CAAWnB;AAAhH;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAzByC;;AA2B9C,eAAeG,OAAO,CAClBP,OAAO,CAACU,eAAD,EAAkB;AACrBP,EAAAA,cADqB;AAErBD,EAAAA,UAFqB;AAGrBD,EAAAA,SAHqB;AAIrBG,EAAAA,YAJqB;AAKrBI,EAAAA;AALqB,CAAlB,CADW,EAQlBF,gBARkB,EASlBD,UATkB,CAAP,CAUZc,gBAVY,CAAf","sourcesContent":["import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getProfile, setUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {getAuthUserData} from \"../../redux/auth-reducer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    isAuth: state.auth.isAuth,\n    authUserId: state.auth.userId\n})\n\nclass ProfileContainer extends React.Component{\n\n    componentDidMount() {\n        let uID=this.props.match.params.userID;\n        if (!uID) uID=this.props.authUserId;\n        console.log(\"Mount\");\n        this.props.getProfile(uID);\n        this.props.getStatus(uID);\n    }\n    componentWillUnmount(){\n        console.log(\"Unmount\")\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevProps.match.params.userID !== this.props.match.params.userID){\n            this.props.getProfile(this.props.match.params.userID);\n            this.props.getStatus(this.props.match.params.userID);\n        }\n    }\n    render() {\n        return (\n            <div>\n                <Profile {...this.props} profile = {this.props.profile} status = {this.props.status} updateStatus = {this.props.updateStatus} />\n            </div>\n        )\n\n    }\n}\nexport default compose (\n    connect(mapStateToProps, {\n        setUserProfile,\n        getProfile,\n        getStatus,\n        updateStatus,\n        getAuthUserData\n    }),\n    withAuthRedirect,\n    withRouter\n) (ProfileContainer);\n"]},"metadata":{},"sourceType":"module"}