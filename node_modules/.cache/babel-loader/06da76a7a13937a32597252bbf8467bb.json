{"ast":null,"code":"const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SETUSERS = 'SETUSERS';\nlet initialState = {\n  users: [{\n    id: 0,\n    photoUrl: 'https://gamasexual.ru/c/i/g/five-nights-at-freddys.jpg',\n    followed: true,\n    fullname: 'Artem',\n    status: \"I'm a boss\",\n    location: {\n      country: 'Belarus',\n      city: 'Minsk'\n    }\n  }, {\n    id: 1,\n    photoUrl: '',\n    followed: true,\n    fullname: 'Alex',\n    status: \"I'm a boss\",\n    location: {\n      country: 'Russia',\n      city: 'Moscow'\n    }\n  }, {\n    id: 2,\n    photoUrl: '',\n    followed: true,\n    fullname: 'Roma',\n    status: \"I'm a boss\",\n    location: {\n      country: 'Ukraine',\n      city: 'Kiev'\n    }\n  }]\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: true\n            };\n          } else {\n            return u;\n          }\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userID) {\n            return { ...u,\n              followed: false\n            };\n          } else {\n            return u;\n          }\n        })\n      };\n\n    case SETUSERS:\n      return { ...state,\n        users: [...state.users, ...action.users]\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport let followAC = userID => ({\n  type: FOLLOW,\n  userID\n});\nexport let unfollowAC = userID => ({\n  type: UNFOLLOW,\n  userID\n});\nexport let setUsersAC = users => ({\n  type: SETUSERS,\n  users\n});\nexport default usersReducer;","map":{"version":3,"sources":["/home/archi/MyProjects/React-redux-run-net/src/redux/user-reducer.js"],"names":["FOLLOW","UNFOLLOW","SETUSERS","initialState","users","id","photoUrl","followed","fullname","status","location","country","city","usersReducer","state","action","type","map","u","userID","followAC","unfollowAC","setUsersAC"],"mappings":"AAAA,MAAMA,MAAM,GAAG,QAAf;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAC,CACF;AAACC,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,QAAQ,EAAG,wDAAnB;AAA6EC,IAAAA,QAAQ,EAAE,IAAvF;AAA6FC,IAAAA,QAAQ,EAAE,OAAvG;AAAgHC,IAAAA,MAAM,EAAE,YAAxH;AAAsIC,IAAAA,QAAQ,EAAE;AAACC,MAAAA,OAAO,EAAE,SAAV;AAAqBC,MAAAA,IAAI,EAAE;AAA3B;AAAhJ,GADE,EAEF;AAACP,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,QAAQ,EAAG,EAAnB;AAAuBC,IAAAA,QAAQ,EAAE,IAAjC;AAAuCC,IAAAA,QAAQ,EAAE,MAAjD;AAAyDC,IAAAA,MAAM,EAAE,YAAjE;AAA+EC,IAAAA,QAAQ,EAAE;AAACC,MAAAA,OAAO,EAAE,QAAV;AAAoBC,MAAAA,IAAI,EAAE;AAA1B;AAAzF,GAFE,EAGF;AAACP,IAAAA,EAAE,EAAE,CAAL;AAAQC,IAAAA,QAAQ,EAAG,EAAnB;AAAuBC,IAAAA,QAAQ,EAAE,IAAjC;AAAuCC,IAAAA,QAAQ,EAAE,MAAjD;AAAyDC,IAAAA,MAAM,EAAE,YAAjE;AAA+EC,IAAAA,QAAQ,EAAE;AAACC,MAAAA,OAAO,EAAE,SAAV;AAAqBC,MAAAA,IAAI,EAAE;AAA3B;AAAzF,GAHE;AADS,CAAnB;;AAQA,MAAMC,YAAY,GAAG,CAACC,KAAK,GAAGX,YAAT,EAAuBY,MAAvB,KAAkC;AACnD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKhB,MAAL;AACI,aAAO,EACH,GAAGc,KADA;AAEHV,QAAAA,KAAK,EAAEU,KAAK,CAACV,KAAN,CAAYa,GAAZ,CAAiBC,CAAC,IAAI;AACzB,cAAIA,CAAC,CAACb,EAAF,KAASU,MAAM,CAACI,MAApB,EAA2B;AACvB,mBAAO,EAAC,GAAGD,CAAJ;AAAOX,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH,WAFD,MAEO;AACH,mBAAOW,CAAP;AACH;AACJ,SANM;AAFJ,OAAP;;AAUJ,SAAKjB,QAAL;AACI,aAAO,EACH,GAAGa,KADA;AAEHV,QAAAA,KAAK,EAAEU,KAAK,CAACV,KAAN,CAAYa,GAAZ,CAAiBC,CAAC,IAAI;AACzB,cAAIA,CAAC,CAACb,EAAF,KAASU,MAAM,CAACI,MAApB,EAA2B;AACvB,mBAAO,EAAC,GAAGD,CAAJ;AAAOX,cAAAA,QAAQ,EAAE;AAAjB,aAAP;AACH,WAFD,MAEO;AACH,mBAAOW,CAAP;AACH;AACJ,SANM;AAFJ,OAAP;;AAUJ,SAAKhB,QAAL;AACI,aAAO,EAAC,GAAGY,KAAJ;AAAWV,QAAAA,KAAK,EAAG,CAAC,GAAGU,KAAK,CAACV,KAAV,EAAiB,GAAGW,MAAM,CAACX,KAA3B;AAAnB,OAAP;;AACJ;AAAS,aAAOU,KAAP;AAzBb;AA0BF,CA3BF;;AA6BA,OAAO,IAAIM,QAAQ,GAAID,MAAD,KAAa;AAACH,EAAAA,IAAI,EAAChB,MAAN;AAAcmB,EAAAA;AAAd,CAAb,CAAf;AACP,OAAO,IAAIE,UAAU,GAAIF,MAAD,KAAa;AAACH,EAAAA,IAAI,EAACf,QAAN;AAAgBkB,EAAAA;AAAhB,CAAb,CAAjB;AACP,OAAO,IAAIG,UAAU,GAAIlB,KAAD,KAAY;AAACY,EAAAA,IAAI,EAAEd,QAAP;AAAiBE,EAAAA;AAAjB,CAAZ,CAAjB;AAGP,eAAgBS,YAAhB","sourcesContent":["const FOLLOW = 'FOLLOW';\nconst UNFOLLOW = 'UNFOLLOW';\nconst SETUSERS = 'SETUSERS';\nlet initialState = {\n    users:[\n        {id: 0, photoUrl : 'https://gamasexual.ru/c/i/g/five-nights-at-freddys.jpg', followed: true, fullname: 'Artem', status: \"I'm a boss\", location: {country: 'Belarus', city: 'Minsk'}},\n        {id: 1, photoUrl : '', followed: true, fullname: 'Alex', status: \"I'm a boss\", location: {country: 'Russia', city: 'Moscow'}},\n        {id: 2, photoUrl : '', followed: true, fullname: 'Roma', status: \"I'm a boss\", location: {country: 'Ukraine', city: 'Kiev'}}\n    ]\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type){\n        case FOLLOW :\n            return {\n                ...state,\n                users: state.users.map (u => {\n                    if (u.id === action.userID){\n                        return {...u, followed: true};\n                    } else {\n                        return u;\n                    }\n                })\n            }\n        case UNFOLLOW :\n            return {\n                ...state,\n                users: state.users.map (u => {\n                    if (u.id === action.userID){\n                        return {...u, followed: false};\n                    } else {\n                        return u;\n                    }\n                })\n            }\n        case SETUSERS:\n            return {...state, users : [...state.users, ...action.users]};\n        default: return state;\n}}\n\nexport let followAC = (userID) => ({type:FOLLOW, userID });\nexport let unfollowAC = (userID) => ({type:UNFOLLOW, userID});\nexport let setUsersAC = (users) => ({type: SETUSERS, users});\n\n\nexport default  usersReducer;"]},"metadata":{},"sourceType":"module"}