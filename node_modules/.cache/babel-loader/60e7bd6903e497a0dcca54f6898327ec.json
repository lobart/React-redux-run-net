{"ast":null,"code":"var _jsxFileName = \"/home/archi/MyProjects/React-redux-run-net/src/components/Users/Users.jsx\";\nimport React from \"react\";\nimport \"./Users.css\";\nimport UserPhoto from \"../../assets/Images/UserPhoto.jpeg\";\nimport { NavLink } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nlet Users = props => {\n  let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\n  let pages = [];\n\n  for (let i = 1; i <= pagesCount; i++) {\n    pages.push(i);\n  }\n\n  let setPageSize = size => {\n    props.pageSize = size;\n    props.setCurrentPage(props.currentPage);\n  };\n\n  function myFunction() {\n    document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n  } // Close the dropdown menu if the user clicks outside of it\n\n\n  window.onclick = function (event) {\n    if (!event.target.matches('.dropbtn')) {\n      var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n      var i;\n\n      for (i = 0; i < dropdowns.length; i++) {\n        var openDropdown = dropdowns[i];\n\n        if (openDropdown.classList.contains('show')) {\n          openDropdown.classList.remove('show');\n        }\n      }\n    }\n  };\n\n  let delta = 10;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dropdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: myFunction,\n        className: \"dropbtn\",\n        children: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u0435\\u0439 \\u043D\\u0430 \\u0441\\u0442\\u0440\\u0430\\u043D\\u0438\\u0446\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"myDropdown\",\n        className: \"dropdown-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"5\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#\",\n          children: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Page\",\n        onClick: () => {\n          props.onPageChanged(props.currentPage - 1 ? props.currentPage - 1 : props.currentPage);\n        },\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), pages.slice(props.currentPage - 1, props.currentPage + delta - 1).map(el => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: el === props.currentPage ? \"selectedPage\" : \"Page\",\n          onClick: () => {\n            props.onPageChanged(el);\n          },\n          children: [\" \", el, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Page\",\n        onClick: () => {\n          props.onPageChanged(props.totalUsersCount - 1 - props.currentPage ? props.currentPage + delta : props.currentPage + delta - 1);\n        },\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: props.users.map(u => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(NavLink, {\n              to: '/profile/' + u.id,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: u.photos.small != null ? u.photos.small : UserPhoto,\n                className: \"ava\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: u.followed ? /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: props.followingProgress,\n              onClick: props.onUnfollow(u.id),\n              children: \"Unfollow\"\n            }, u.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              disabled: props.followingProgress,\n              onClick: props.onFollow(u.id),\n              children: \"Follow\"\n            }, u.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 39\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: u.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: u.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 48\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"u.location.city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"u.location.country\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 29\n        }, this)]\n      }, u.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Page\",\n        onClick: () => {\n          props.onPageChanged(props.currentPage - 1 ? props.currentPage - 1 : props.currentPage);\n        },\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), pages.slice(props.currentPage - 1, props.currentPage + delta - 1).map(el => {\n        return /*#__PURE__*/_jsxDEV(\"span\", {\n          className: el === props.currentPage ? \"selectedPage\" : \"Page\",\n          onClick: () => {\n            props.onPageChanged(el);\n          },\n          children: [\" \", el, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 28\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"Page\",\n        onClick: () => {\n          props.onPageChanged(props.totalUsersCount - 1 - props.currentPage ? props.currentPage + delta : props.currentPage + delta - 1);\n        },\n        children: \"...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Users;\nexport default Users;\n\nvar _c;\n\n$RefreshReg$(_c, \"Users\");","map":{"version":3,"sources":["/home/archi/MyProjects/React-redux-run-net/src/components/Users/Users.jsx"],"names":["React","UserPhoto","NavLink","Users","props","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","setPageSize","size","setCurrentPage","currentPage","myFunction","document","getElementById","classList","toggle","window","onclick","event","target","matches","dropdowns","getElementsByClassName","length","openDropdown","contains","remove","delta","onPageChanged","slice","map","el","users","u","id","photos","small","followed","followingProgress","onUnfollow","onFollow","name","status"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./Users.css\";\nimport UserPhoto from \"../../assets/Images/UserPhoto.jpeg\";\nimport {NavLink} from \"react-router-dom\";\n\nlet Users = (props) => {\n    let pagesCount = Math.ceil(props.totalUsersCount/props.pageSize);\n    let pages = [];\n    for (let i=1; i <= pagesCount; i++){\n        pages.push(i);\n    }\n    let setPageSize = (size) =>{\n        props.pageSize=size;\n        props.setCurrentPage(props.currentPage);\n    }\n    function myFunction() {\n        document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n    }\n\n// Close the dropdown menu if the user clicks outside of it\n    window.onclick = function(event) {\n        if (!event.target.matches('.dropbtn')) {\n\n            var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n            var i;\n            for (i = 0; i < dropdowns.length; i++) {\n                var openDropdown = dropdowns[i];\n                if (openDropdown.classList.contains('show')) {\n                    openDropdown.classList.remove('show');\n                }\n            }\n        }\n    }\n    let delta = 10;\n    return (\n        <div>\n            <div className=\"dropdown\">\n                <button onClick={myFunction} className=\"dropbtn\">Количество профилей на странице</button>\n                <div id=\"myDropdown\" className=\"dropdown-content\">\n                    <a  href=\"#\">5</a>\n                    <a  href=\"#\">10</a>\n                    <a  href=\"#\">20</a>\n                </div>\n            </div>\n            <div>\n                <span className={\"Page\"} onClick={() => {props.onPageChanged((props.currentPage-1)?(props.currentPage-1):(props.currentPage))}}>...</span>\n                {pages.slice(props.currentPage-1, props.currentPage + delta -1).map(el => {\n                    return <span className={el === props.currentPage ? \"selectedPage\" : \"Page\" }\n                                 onClick={() => {props.onPageChanged(el)} }> {el} < /span>\n                })}\n                <span className={\"Page\"} onClick={() => {props.onPageChanged((props.totalUsersCount-1-props.currentPage)?(props.currentPage+delta):(props.currentPage+delta-1))}}>...</span>\n            </div>\n            <div>\n                {\n                    props.users.map(u =>\n                        <div key = {u.id}>\n                        <span>\n                            <div>\n                                <NavLink to={'/profile/' + u.id}>\n                                <img src={u.photos.small != null ? u.photos.small : UserPhoto} className={\"ava\"}/>\n                                </NavLink>\n                            </div>\n                            <div>\n                                {u.followed ?\n                                    <button key = {u.id} disabled={props.followingProgress} onClick={props.onUnfollow(u.id)}>Unfollow</button>\n                                    : <button key = {u.id} disabled={props.followingProgress} onClick={props.onFollow(u.id)}>Follow</button>\n                                }\n                            </div>\n                        </span>\n                            <span>\n                            <div>{u.name}</div><div>{u.status}</div>\n                            <div>{\"u.location.city\"}</div>\n                            <div>{\"u.location.country\"}</div>\n                        </span>\n                        </div>)\n                }\n            </div>\n            <div>\n                <span className={\"Page\"} onClick={() => {props.onPageChanged((props.currentPage-1)?(props.currentPage-1):(props.currentPage))}}>...</span>\n                {pages.slice(props.currentPage-1, props.currentPage + delta -1).map(el => {\n                    return <span className={el === props.currentPage ? \"selectedPage\" : \"Page\" }\n                                 onClick={() => {props.onPageChanged(el)} }> {el} < /span>\n                })}\n                <span className={\"Page\"} onClick={() => {props.onPageChanged((props.totalUsersCount-1-props.currentPage)?(props.currentPage+delta):(props.currentPage+delta-1))}}>...</span>\n            </div>\n        </div>\n    )\n}\nexport default Users;"]},"metadata":{},"sourceType":"module"}