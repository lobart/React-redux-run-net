{"ast":null,"code":"import Messages from \"./Messages\";\nimport { addMessageAction, updateTextMessageAction } from \"../../../redux/message-reducer\";\nimport { connect } from \"react-redux\";\n\nlet mapStateToProps = state => {\n  return {\n    newMessageText: state.messagesPage.newMessageText,\n    messagesData: state.messagesPage.messagesData\n  };\n};\n\nlet mapDispatchToProps = dispatch => {\n  return {\n    onMessageChange: text => {\n      dispatch(updateTextMessageAction(text));\n    },\n    addMessage: text => {\n      dispatch(addMessageAction(text));\n    }\n  };\n};\n\nconst MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(Messages);\nexport default MessagesContainer;","map":{"version":3,"sources":["/home/archi/MyProjects/React-redux-run-net/src/components/Dialogs/Messages/Messages-container.js"],"names":["Messages","addMessageAction","updateTextMessageAction","connect","mapStateToProps","state","newMessageText","messagesPage","messagesData","mapDispatchToProps","dispatch","onMessageChange","text","addMessage","MessagesContainer"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,YAArB;AACA,SAAQC,gBAAR,EAA0BC,uBAA1B,QAAwD,gCAAxD;AACA,SAAQC,OAAR,QAAsB,aAAtB;;AAKA,IAAIC,eAAe,GAAIC,KAAD,IAAU;AAC5B,SAAO;AACCC,IAAAA,cAAc,EAAED,KAAK,CAACE,YAAN,CAAmBD,cADpC;AAECE,IAAAA,YAAY,EAAGH,KAAK,CAACE,YAAN,CAAmBC;AAFnC,GAAP;AAKH,CAND;;AAOA,IAAIC,kBAAkB,GAAIC,QAAD,IAAa;AAClC,SAAM;AACFC,IAAAA,eAAe,EAAIC,IAAD,IAAU;AACxBF,MAAAA,QAAQ,CAACR,uBAAuB,CAACU,IAAD,CAAxB,CAAR;AACH,KAHC;AAIFC,IAAAA,UAAU,EAAID,IAAD,IAAU;AACnBF,MAAAA,QAAQ,CAACT,gBAAgB,CAACW,IAAD,CAAjB,CAAR;AACH;AANC,GAAN;AAQH,CATD;;AAWA,MAAME,iBAAiB,GAAGX,OAAO,CAACC,eAAD,EAAkBK,kBAAlB,CAAP,CAA6CT,QAA7C,CAA1B;AAGA,eAAec,iBAAf","sourcesContent":["import Messages from \"./Messages\";\nimport {addMessageAction, updateTextMessageAction} from \"../../../redux/message-reducer\";\nimport {connect} from \"react-redux\";\n\n\n\n\nlet mapStateToProps = (state) =>{\n    return({\n            newMessageText: state.messagesPage.newMessageText,\n            messagesData : state.messagesPage.messagesData\n        }\n    )\n}\nlet mapDispatchToProps = (dispatch) =>{\n    return{\n        onMessageChange : (text) => {\n            dispatch(updateTextMessageAction(text))\n        },\n        addMessage : (text) => {\n            dispatch(addMessageAction(text))\n        }\n    }\n}\n\nconst MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(Messages);\n\n\nexport default MessagesContainer;"]},"metadata":{},"sourceType":"module"}