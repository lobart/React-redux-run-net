{"version":3,"sources":["assets/Images/UserPhoto.jpeg","components/Users/Users.jsx","components/Users/UsersSelector.js","components/Users/Users-Container.js"],"names":["Users","props","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","push","window","onclick","event","target","matches","dropdowns","document","getElementsByClassName","length","openDropdown","classList","contains","remove","showSizeChanger","total","defaultPageSize","defaultCurrent","onChange","page","onPageChanged","users","map","u","to","id","src","photos","small","UserPhoto","className","followed","disabled","followingProgress","some","onClick","onUnfollow","onFollow","name","status","getSelUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","currentPage","getIsFetching","isFetching","getFollowingProgress","UsersContainer","getUsers","uId","this","Preloader","React","Component","compose","connect","follow","unfollow","setUsers","setCurrentPage","setTotalUsersCount","setToggleIsFetching","setToggleIsFProgress"],"mappings":"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","file":"static/js/5.3e0784ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/UserPhoto.154c648f.jpeg\";","import React from \"react\";\nimport \"./Users.css\";\nimport UserPhoto from \"../../assets/Images/UserPhoto.jpeg\";\nimport {NavLink} from \"react-router-dom\";\nimport { Pagination } from 'antd';\n\nlet Users = (props) => {\n    let pagesCount = Math.ceil(props.totalUsersCount/props.pageSize);\n    let pages = [];\n    for (let i=1; i <= pagesCount; i++){\n        pages.push(i);\n    }\n    let setPageSize = (size) =>{\n        props.pageSize=size;\n        props.setCurrentPage(props.currentPage);\n    }\n    function myFunction() {\n        document.getElementById(\"myDropdown\").classList.toggle(\"show\");\n    }\n\n// Close the dropdown menu if the user clicks outside of it\n    window.onclick = function(event) {\n        if (!event.target.matches('.dropbtn')) {\n\n            var dropdowns = document.getElementsByClassName(\"dropdown-content\");\n            var i;\n            for (i = 0; i < dropdowns.length; i++) {\n                var openDropdown = dropdowns[i];\n                if (openDropdown.classList.contains('show')) {\n                    openDropdown.classList.remove('show');\n                }\n            }\n        }\n    }\n    return (\n        <div>\n            <div>\n                <Pagination\n                    showSizeChanger={false}\n                    total={props.totalUsersCount}\n                    defaultPageSize={props.pageSize}\n                    defaultCurrent={1}\n                    onChange={(page) => {props.onPageChanged(page)}}\n                />\n            </div>\n            <div>\n                {\n                    props.users.map(u =>\n                        <div key = {u.id}>\n                        <span>\n                            <div>\n                                <NavLink to={'/profile/' + u.id}>\n                                <img src={u.photos.small != null ? u.photos.small : UserPhoto} className={\"ava\"}/>\n                                </NavLink>\n                            </div>\n                            <div>\n                                {u.followed ?\n                                    <button disabled={props.followingProgress.some(id => id===u.id)} onClick={()=>{\n                                        props.onUnfollow(u.id)} }>Unfollow</button>\n                                    : <button disabled={props.followingProgress.some(id => id===u.id)} onClick={()=>{\n                                    props.onFollow(u.id)} }>Follow</button>\n                                }\n                            </div>\n                        </span>\n                            <span>\n                            <div>{u.name}</div><div>{u.status}</div>\n                            <div>{\"u.location.city\"}</div>\n                            <div>{\"u.location.country\"}</div>\n                        </span>\n                        </div>)\n                }\n            </div>\n            <div>\n                <Pagination\n                    showSizeChanger={false}\n                    total={props.totalUsersCount}\n                    defaultPageSize={props.pageSize}\n                    defaultCurrent={1}\n                    onChange={(page) => {props.onPageChanged(page)}}\n                />\n            </div>\n        </div>\n    )\n}\nexport default Users;","\n\nexport const getSelUsers = (state) => {\n    return state.usersPage.users\n}\n\nexport const getPageSize = (state) => {\n    return state.usersPage.pageSize\n}\n\nexport const getTotalUsersCount = (state) => {\n    return state.usersPage.totalUsersCount\n}\nexport const getCurrentPage = (state) => {\n    return state.usersPage.currentPage\n}\n\nexport const getIsFetching = (state) => {\n    return state.usersPage.isFetching\n}\n\nexport const getFollowingProgress = (state) => {\n    return state.usersPage.followingProgress\n}","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/Preloader/Preloader\";\nimport userAPI from \"../../api/api\";\nimport {\n    follow, getUsers, onFollow, onUnfollow,\n    setCurrentPage,\n    setToggleIsFetching,\n    setToggleIsFProgress,\n    setTotalUsersCount,\n    setUsers,\n    unfollow\n} from \"../../redux/user-reducer\";\nimport {compose} from \"redux\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {\n    getCurrentPage,\n    getFollowingProgress,\n    getIsFetching,\n    getPageSize,\n    getSelUsers,\n    getTotalUsersCount\n} from \"./UsersSelector\";\n\nexport class UsersContainer extends React.Component {\n    componentDidMount() {\n        this.props.getUsers(this.props.currentPage, this.props.pageSize);\n    };\n    onPageChanged =  (currentPage) =>{\n        this.props.getUsers(currentPage, this.props.pageSize);\n    };\n    onFollow = (uId) => {\n        this.props.onFollow(uId)\n    }\n    onUnfollow = (uId) => {\n        this.props.onUnfollow(uId)\n    }\n    render() {\n        return <>\n            {this.props.isFetching ?\n            <Preloader/> : null}\n            <Users key='Users' {...this.props}\n                   onPageChanged={this.onPageChanged}\n                   onUnfollow={this.onUnfollow}\n                   onFollow={this.onFollow}\n            />\n        </>\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        users: getSelUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: getCurrentPage(state),\n        isFetching: getIsFetching(state),\n        followingProgress: getFollowingProgress(state)\n    }\n}\nexport default compose (\n    ///withAuthRedirect,\n    connect(mapStateToProps, {\n        follow,\n        unfollow,\n        setUsers,\n        setCurrentPage,\n        setTotalUsersCount,\n        setToggleIsFetching,\n        setToggleIsFProgress,\n        getUsers,\n        onUnfollow,\n        onFollow\n    })\n)(UsersContainer);\n\n"],"sourceRoot":""}