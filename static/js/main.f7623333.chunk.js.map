{"version":3,"sources":["components/Profile/ProfileInfo/ProfileStatus.module.css","components/hoc/withAuthRedirect.js","redux/message-reducer.js","redux/user-reducer.js","components/Nav/Nav.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/common/Preloader/Preloader.module.css","api/api.js","components/Profile/Profile.module.css","reportWebVitals.js","redux/auth-reducer.js","redux/dialogs-reducer.js","redux/profile-reducer.js","redux/nav-reducer.js","redux/header-reducer.js","redux/app-reducer.js","redux/redux-store.js","components/Nav/Nav.js","components/Nav/Nav-container.js","components/Profile/MyPosts/Post/Post.js","components/Profile/MyPosts/MyPosts.js","components/Profile/MyPosts/MyPosts-container.js","components/Profile/ProfileInfo/ProfileStatus.js","components/Profile/ProfileInfo/ProfileInfo.js","components/Profile/Profile.js","components/Profile/Profile-container.js","components/Header/Header.js","components/Header/Header-Container.js","components/Login/Login.js","components/Login/LoginContainer.js","App.js","index.js","utils/Validator.js","components/common/FormsControls/FormsControls.js","components/common/Preloader/Preloader.js","components/common/FormsControls/FormControls.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css"],"names":["module","exports","withAuthRedirect","Component","this","props","isAuth","to","React","ADD_MESSAGE","UPDATE_TEXT_MESSAGE","initialState","messagesData","message","newMessageText","addMessageAction","text","type","updateTextMessageAction","messageReducer","state","action","FOLLOW","UNFOLLOW","SETUSERS","SETCURRENTPAGE","SETTOTALUSERSCOUNT","TOGGLE_IS_FETCHING","TOGGLE_IS_FPROGRESS","users","pageSize","totalUsersCount","currentPage","isFetching","followingProgress","follow","userID","unfollow","setUsers","setCurrentPage","setTotalUsersCount","setToggleIsFetching","setToggleIsFProgress","getUsers","pageNumber","dispatch","a","userAPI","data","items","totalCount","onUnfollow","uID","followAPI","toUnFollow","resultCode","onFollow","toFollow","usersReducer","map","u","id","followed","filter","instance","axios","create","withCredentials","baseURL","headers","get","then","response","getProfile","console","warn","profileAPI","authMe","authAPI","me","userId","post","delete","getStatus","updateStatus","status","put","login","email","password","remem_me","rememberMe","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","SET_AUTH_USER_DATA","setAuthUserData","payload","getAuthUserData","authReducer","ADD_DIALOG","dialogsData","dialogsReducer","newDial","name","dialog","stateCopy","push","ADD_POST","UPDATE_TEXT_POST","SET_USER_PROFILE","SET_STATUS","contentDataPosts","newPostText","profile","setUserProfile","setStatus","profileReducer","navData","url","navReducer","SET_USER_INFO","SET_USER_PHOTO","userData","userPhoto","setUserInfo","setUserPhoto","headerReducer","SET_INITIALIZED","initialized","appReducer","reducers","combineReducers","dialogsPage","profilePage","messagesPage","navPage","usersPage","headerPage","auth","form","formReducer","app","store","createStore","applyMiddleware","thunkMiddleware","window","Nav","NavDataMap","el","className","s","nav","NavContainer","connect","Post","src","maxLength10","maxLengthCreator","ReduxPostForm","reduxForm","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","requered","button","MyPosts","memo","contMap","postsData","values","addPost","newPostBody","log","MyPostsContainer","onPostChange","updateTextPostAction","addPostAction","ProfileStatusWithHooks","useState","editMode","setEditMode","useEffect","style","inputStatus","onDoubleClick","inputStatusEdit","autoFocus","onBlur","value","onChange","e","currentTarget","ProfileInfo","wallpaper","description","userphoto","photos","large","fullName","ProfileStatus","Preloader","Profile","ProfileContainer","match","params","authUserId","prevProps","prevState","snapshot","compose","withRouter","Header","header","align","ava","photo","onClick","d1","HeaderContainer","setProfileHeader","response_id","small","ReduxLoginForm","CheckBox","error","formSummaryError","Login","formData","LoginContainer","messages","length","stopSubmit","_error","DialogsContainer","lazy","UserContainer","App","initializeApp","Suspense","fallback","exact","path","render","promise","Promise","all","rendererer","ReactDOM","StrictMode","document","getElementById","subscribe","max","FormControl","input","meta","hasError","touched","styles","formControl","children","restProps","child","preloader","tip"],"mappings":"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","file":"static/js/main.f7623333.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputStatus\":\"ProfileStatus_inputStatus__3akKk\",\"inputStatusEdit\":\"ProfileStatus_inputStatusEdit__17yBI\"};","import React from \"react\";\nimport {Redirect} from \"react-router-dom\";\n\n\nexport const withAuthRedirect = (Component) => {\n    class redirectComponent extends React.Component{\n        render () {\n            if (!this.props.isAuth) return <Redirect to={'/login'}/>\n            return <Component {...this.props}/>\n        }}\n    return redirectComponent\n}","const ADD_MESSAGE = 'message/ADD-MESSAGE';\nconst UPDATE_TEXT_MESSAGE = 'message/UPDATE-TEXT-MESSAGE';\n\nlet initialState = {\n    messagesData: [\n        {message: 'Hello!'},\n        {message: 'Salut!'},\n        {message: 'Ty zdes!'}\n    ],\n    newMessageText: 'Type new message!'\n}\nconst messageReducer = (state = initialState, action) => {\n    switch(action.type){\n        case ADD_MESSAGE:\n            return {...state,\n                messagesData : [...state.messagesData, {message: action.text}]};\n\n        case UPDATE_TEXT_MESSAGE:\n            return {...state,\n                    newMessageText : action.text};\n        default: return state;\n    }\n}\n\nexport let addMessageAction = (text) => {\n    return(\n        {type: ADD_MESSAGE, text:text}\n    )\n}\nexport let updateTextMessageAction = (text) => {\n    return(\n        {type: UPDATE_TEXT_MESSAGE, text:text}\n    )\n}\n\nexport default messageReducer;","import {userAPI,followAPI} from \"../api/api\";\n\nconst FOLLOW = 'user/FOLLOW';\nconst UNFOLLOW = 'user/UNFOLLOW';\nconst SETUSERS = 'user/SETUSERS';\nconst SETCURRENTPAGE = 'user/SETCURRENTPAGE';\nconst SETTOTALUSERSCOUNT = 'user/SETTOTALUSERSCOUNT';\nconst TOGGLE_IS_FETCHING = 'user/TOGGLE_IS_FETCHING';\nconst TOGGLE_IS_FPROGRESS = 'user/TOGGLE_IS_FPROGRESS';\n\nlet initialState = {\n    users:[],\n    pageSize: 5,\n    totalUsersCount: 20,\n    currentPage: 2,\n    isFetching: false,\n    followingProgress: []\n}\n\nconst usersReducer = (state = initialState, action) => {\n    switch (action.type){\n        case FOLLOW :\n            return {\n                ...state,\n                users: state.users.map (u => {\n                    if (u.id === action.userID){\n                        return {...u, followed: true};\n                    } else {\n                        return u;\n                    }\n                })\n            }\n        case UNFOLLOW :\n            return {\n                ...state,\n                users: state.users.map (u => {\n                    if (u.id === action.userID){\n                        return {...u, followed: false};\n                    } else {\n                        return u;\n                    }\n                })\n            }\n        case SETUSERS:\n            return {...state, users : action.users};\n        case SETCURRENTPAGE:\n            return {...state, currentPage: action.currentPage};\n        case SETTOTALUSERSCOUNT:\n            return {...state, totalUsersCount: action.totalUsersCount};\n        case TOGGLE_IS_FETCHING:\n            return {...state, isFetching: action.isFetching};\n        case TOGGLE_IS_FPROGRESS:\n            return {...state,\n                followingProgress : action.isFetching\n                    ? [...state.followingProgress, action.userID]\n                    : [...state.followingProgress.filter(id => id != action.userID)]\n                 };\n        default: return state;\n}}\n\nexport let follow = (userID) => ({type:FOLLOW, userID });\nexport let unfollow = (userID) => ({type:UNFOLLOW, userID});\nexport let setUsers = (users) => ({type: SETUSERS, users});\nexport let setCurrentPage = (currentPage) => ({type: SETCURRENTPAGE, currentPage});\nexport let setTotalUsersCount = (totalUsersCount) => ({type: SETTOTALUSERSCOUNT, totalUsersCount});\nexport let setToggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching});\nexport let setToggleIsFProgress = (isFetching, userID) => ({type: TOGGLE_IS_FPROGRESS, isFetching, userID});\n\nexport let getUsers = (pageNumber, pageSize) => { return async (dispatch) => {\n    dispatch(setCurrentPage(pageNumber));\n    dispatch(setToggleIsFetching(true));\n\n    let data = await userAPI.getUsers(pageNumber, pageSize);\n        dispatch(setToggleIsFetching(false));\n        dispatch(setUsers(data.items));\n        dispatch(setTotalUsersCount(data.totalCount))\n}}\n\nexport let onUnfollow = (uID) => { return async (dispatch) => {\n    dispatch(setToggleIsFProgress(true, uID));\n    let data = await followAPI.toUnFollow(uID);\n        if(data.resultCode == 0){\n            dispatch(unfollow(uID))\n        }\n        dispatch(setToggleIsFProgress(false, uID));\n}}\nexport let onFollow = (uID) => { return async (dispatch) => {\n    dispatch(setToggleIsFProgress(true, uID));\n    let data = await followAPI.toFollow(uID);\n        if(data.resultCode == 0){\n            dispatch(follow(uID))\n        }\n        dispatch(setToggleIsFProgress(false, uID));\n}}\nexport default  usersReducer;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3gICw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"MyPosts_button__2WbpQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__A0EJd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__2dvkO\"};","import axios from \"axios\";\n\n\nconst instance=axios.create({\n    withCredentials:true,\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\n    headers: {'API-KEY' : 'ed386668-28b4-45de-98f4-ed82c5c0ecc4'}\n})\n\nexport const userAPI = {\n    getUsers(currentPage, pageSize){\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => { return (response.data)})},\n    getProfile(uID){\n        console.warn('Obsolete warning! Please, use new method!')\n        return profileAPI.getProfile(uID)\n    },\n    authMe(){\n         console.warn('Obsolete warning! Please, use new method!')\n         return authAPI.me();\n    }\n}\n\nexport const followAPI = {\n    toFollow(userId){\n        return instance.post(`follow/${userId}`)\n            .then(response => { return (response.data)}) },\n    toUnFollow(userId){\n        return instance.delete(`follow/${userId}`)\n            .then(response => { return (response.data)})\n    },\n}\n\nexport const  profileAPI = {\n    getProfile(uID){\n        return instance.get(`profile/${uID}`)\n            .then(response => { return (response.data)})\n    },\n    getStatus(uID){\n        return instance.get(`profile/status/${uID}`)\n            .then(response => { return (response.data)})\n    },\n    updateStatus(status){\n        return instance.put(`profile/status`, {status: status})\n    }\n\n}\n\nexport const authAPI = {\n    me(){\n        return instance.get(`auth/me`);\n    },\n    login(email, password, remem_me){\n        return instance.post('auth/login', {email:email, password: password, rememberMe: remem_me});\n    },\n    logout(){\n        return instance.delete('auth/login');\n    }\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2wLDD\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\n\n\n\nconst SET_AUTH_USER_DATA = 'auth/SET_AUTH_USER_DATA';\n\nlet initialState = {\n    userId:null,\n    email:null,\n    login:null,\n    isAuth:false\n    }\n\nconst authReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_AUTH_USER_DATA:\n            return {\n                ...state,\n                ...action.payload\n            }\n        default: return state;\n    }\n}\n\nexport const setAuthUserData = (userId, email, login, isAuth) => ({type: SET_AUTH_USER_DATA,\n    payload: {userId, email, login, isAuth}})\nexport const getAuthUserData = () => async (dispatch) => {\n    let response = await authAPI.me();\n    if (response.data.resultCode === 0) {\n        let {id, email, login} = response.data.data;\n        dispatch(setAuthUserData(id, email, login, true));\n    }\n}\n\n\nexport let login = (email, password, rememberMe) =>async (dispatch) => {\n    let response = await authAPI.login(email, password, rememberMe);\n        if(response.data.resultCode === 0) {\n            dispatch(getAuthUserData())\n            console.log('Authorization is on!')\n        }\n        else {\n            let message = response.data.messages.length ? response.data.messages[0] : \"Some wrong!\"\n            dispatch(stopSubmit('loginForm',{_error:message }));\n            console.log('Invalid authorization!')\n        }\n}\nexport let logout = () =>async (dispatch) => {\n    let response = await authAPI.logout();\n            if (response.data.resultCode === 0) {\n                dispatch(setAuthUserData(null, null, null, false));\n            }\n}\nexport default authReducer;\n","import authReducer from \"./auth-reducer\";\n\nconst ADD_DIALOG = 'dialogs/ADD-DIALOG';\n\nlet initialState = {\n    dialogsData:\n        [{\"name\" : 'Archi', \"id\":1},\n            {\"name\" : 'Roma', \"id\":2},\n            {\"name\" : 'Lex', \"id\":3}],\n}\n\nconst dialogsReducer = (state = initialState, action) => {\n    switch(action.type){\n        case ADD_DIALOG:\n        let newDial = {\n            id: 4,\n            name : action.dialog\n        }\n        let stateCopy = {...state};\n        stateCopy.dialogsData = {...state.dialogsData};\n        stateCopy.dialogsData.push(newDial)\n        return stateCopy;\n        default: return state;\n    }\n}\n\nexport let addDialogAction = (text) => {\n    return(\n        {type: ADD_DIALOG, text:text}\n    )\n}\n\nexport default dialogsReducer;","import {authAPI, profileAPI} from \"../api/api\";\nconst ADD_POST = 'profile/ADD-POST';\nconst UPDATE_TEXT_POST = 'profile/UPDATE-TEXT-POST';\nconst SET_USER_PROFILE = 'profile/SET_USER_PROFILE';\nconst SET_STATUS = 'profile/SET_STATUS';\nlet initialState = {\n    contentDataPosts:\n        [{post: 'Hello!'},\n            {post: 'Everybody!'},\n            {post: 'Vyshe Ruki!'},\n            {post: 'Suki Blyadi!'}],\n    newPostText: 'Type new Post!',\n    profile: null,\n    status: \"Status\"\n}\nconst profileReducer = (state = initialState, action) => {\n    switch(action.type){\n        case ADD_POST:\n            return {\n                ...state,\n                contentDataPosts : [...state.contentDataPosts, {post : action.text}]\n            };\n        case UPDATE_TEXT_POST:\n            return {\n                ...state,\n                newPostText: action.text\n            };\n        case SET_USER_PROFILE:\n            return {\n                ...state,\n                profile: action.profile\n            };\n        case SET_STATUS:\n            return {\n                ...state,\n                status: action.status\n            };\n        default: return state;\n    }\n\n}\n\nexport let addPostAction = (text) => {\n    return(\n        {type: ADD_POST, text:text}\n    )\n}\n\nexport let updateTextPostAction = (text) => {\n    return(\n        {type: UPDATE_TEXT_POST, text:text}\n    )\n}\n\nexport let setUserProfile = (profile) => {\n    return(\n        {type: SET_USER_PROFILE, profile: profile}\n    )\n}\n\nexport let setStatus = (status) => {\n    return({\n    type: SET_STATUS, status:status}\n    )\n}\nexport let getProfile = (uID) => async (dispatch) => {\n    let response = await profileAPI.getProfile(uID);\n        dispatch(setUserProfile(response));\n}\n\nexport let getStatus = (userId) =>async (dispatch) => {\n    let response = await profileAPI.getStatus(userId);\n        dispatch(setStatus(response))\n}\nexport let updateStatus = (status) =>async (dispatch) => {\n    let response = await profileAPI.updateStatus(status);\n        if(response.data.resultCode === 0) {\n            dispatch(setStatus(status))\n        }\n}\n\n\nexport default profileReducer;","\nlet initialState = {\n    navData:[\n        {name: 'Dialog', url:'/dialogs'},\n        {name: 'Profile', url: '/profile/15362'},\n        {name: 'Friends', url: '/friends'},\n        {name: 'Competitions', url: '/competitions'},\n        {name: 'Users', url: '/users'}\n\n    ]\n}\n\nconst navReducer = (state = initialState, action) => {\n    return state;\n}\n\nexport default  navReducer;","import {userAPI} from \"../api/api\";\n\nconst SET_USER_INFO = 'header/SET_USER_INFO';\nconst SET_USER_PHOTO = 'header/SET_USER_PHOTO';\n\nlet initialState = {\n    userData:{\n        id: null,\n        login: null\n    },\n    userPhoto: null\n}\n\nconst headerReducer = (state = initialState, action) => {\n    switch(action.type){\n        case SET_USER_INFO:\n            return{\n                ...state,\n                userData:{\n                    id : action.userData.id,\n                    login : action.userData.login\n                },\n            };\n        case SET_USER_PHOTO:\n            return{\n                ...state,\n                userPhoto:action.userPhoto\n            };\n        default: return state;\n    }\n}\n\nexport let setUserInfo = (userData) => ({type:SET_USER_INFO, userData})\nexport let setUserPhoto = (userPhoto) => ({type:SET_USER_PHOTO, userPhoto})\n\nexport let setProfileHeader = () => async(dispatch) => {\n    let response = await userAPI.authMe();\n    dispatch(setUserInfo(response.data.data));\n    let response_id = await userAPI.getProfile(response.data.data.id);\n    dispatch(setUserPhoto(response_id.photos.small))\n}\nexport default headerReducer;","import {authAPI} from \"../api/api\";\nimport {stopSubmit} from \"redux-form\";\nimport {getAuthUserData} from \"./auth-reducer\";\n\n\n\nconst SET_INITIALIZED = 'SET_INITIALIZED';\n\nlet initialState = {\n    initialized:null\n    }\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case SET_INITIALIZED:\n            return {\n                initialized: true\n            }\n        default: return state;\n    }\n}\n\nexport const setInitialized = (initialized) => ({type: SET_INITIALIZED,\n    initialized: initialized})\nexport const initializeApp = () => (dispatch) => {\n    let promise = dispatch(getAuthUserData());\n    Promise.all([promise]).then(\n        () => {\n            dispatch(setInitialized())})\n    }\nexport default appReducer;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport dialogsReducer from \"./dialogs-reducer\";\nimport profileReducer from \"./profile-reducer\";\nimport messageReducer from \"./message-reducer\";\nimport navReducer from \"./nav-reducer\";\nimport usersReducer from \"./user-reducer\";\nimport headerReducer from \"./header-reducer\";\nimport thunkMiddleware from \"redux-thunk\"\nimport authReducer from \"./auth-reducer\";\n\nimport {reducer as formReducer} from 'redux-form'\nimport appReducer from \"./app-reducer\";\n\nlet reducers = combineReducers({\n    dialogsPage : dialogsReducer,\n    profilePage: profileReducer,\n    messagesPage : messageReducer,\n    navPage : navReducer,\n    usersPage : usersReducer,\n    headerPage : headerReducer,\n    auth : authReducer,\n    form : formReducer,\n    app: appReducer\n})\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\nwindow.store = store;\n\nexport default store;\n\n","import s from './Nav.module.css';\nimport {NavLink} from \"react-router-dom\";\n\nconst Nav = (props) => {\n    let NavDataMap = props.navData.map( (el)=> {\n            return (\n                <div>\n                    <NavLink to={el.url}>{el.name}</NavLink>\n                </div>\n            )\n        }\n    )\n    return (\n        <nav className={s.nav}>\n            {NavDataMap}\n        </nav>\n    )\n}\n\nexport default Nav;","import {NavLink} from \"react-router-dom\";\nimport Nav from \"./Nav\";\nimport {connect} from \"react-redux\";\n\nlet mapStateToProps = (state) => {\n    return{\n        navData:state.navPage.navData\n    };\n}\n\nconst NavContainer = connect(mapStateToProps)(Nav);\n\nexport default NavContainer;","import s from \"./Post.module.css\";\n\nconst Post = (props) => {\n    return (\n        <div>\n            <div className={s.post}>\n                <img src='https://www.old-games.ru/games/pc/postal/covers/146_5e5bceebe9096.jpg'/>\n            </div>\n            <span>{props.message}</span>\n            <div>\n            <span>Like</span>\n            <span>Dislike</span>\n            </div>\n        </div>\n    )\n}\n\nexport default Post;","import s from \"./MyPosts.module.css\";\nimport Post from './Post/Post';\nimport React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, requered} from \"../../../utils/Validator\";\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst addPostForm =(props) => {\n\n    return(\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={TextArea}\n                       name={'newPostBody'}\n                       placeholder={'New post'}\n                       validate={[requered, maxLength10]}\n                ></Field>\n            </div>\n            <div>\n                <button className={s.button}>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nconst ReduxPostForm = reduxForm({form: 'dialogsAddPostForm'})(addPostForm);\n\nconst MyPosts = React.memo((props) => {\n    let contMap =  props.postsData.map( (el)=>{\n        return(\n            <Post message = {el.post}/>\n        )\n    });\n    let onSubmit = (values) => {\n        props.addPost(values.newPostBody)\n        console.log(values.newPostBody)\n    }\n    return (\n        <div>\n            <ReduxPostForm onSubmit={onSubmit}/>\n            <div>\n                {contMap}\n            </div>\n        </div>\n    )\n})\n\nexport default MyPosts;\n\n","import MyPosts from \"./MyPosts\";\nimport {addPostAction, updateTextPostAction} from \"../../../redux/profile-reducer\";\nimport {connect} from \"react-redux\";\n\n\n\nlet mapStateToProps = (state) =>{\n    return({\n            newPostText: state.profilePage.newPostText,\n            postsData : state.profilePage.contentDataPosts\n        }\n    )\n}\nlet mapDispatchToProps = (dispatch) =>{\n    return{\n        onPostChange : (text) => {\n            dispatch(updateTextPostAction(text))\n        },\n        addPost : (text) => {\n            dispatch(addPostAction(text))\n        }\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\nexport default MyPostsContainer;","import style from './ProfileStatus.module.css'\nimport * as React from \"react\";\nimport { useState, useEffect } from 'react';\n\nconst ProfileStatusWithHooks = (props) => {\n\n    let [editMode, setEditMode] = useState(false);\n    let [status, setStatus] = useState(props.status)\n\n    useEffect( () => {\n        setStatus(props.status)\n    }, [props.status])\n\n    let activateEditMode = () => {\n        setEditMode(true);\n    }\n    let deactivateEditMode = () => {\n        setEditMode(false)\n        props.updateStatus(status)\n    }\n    let onStatusChange = (e) => {\n        setStatus(e.currentTarget.value)\n    }\n\n    return(\n        <div>\n            {!editMode &&\n            <div className={style.inputStatus}>\n                <span onDoubleClick={() => {activateEditMode()}} >\n                    {status}\n                </span>\n            </div>\n            }\n            {editMode &&\n            <div className={style.inputStatusEdit}>\n                <input autoFocus={true}\n                       onBlur={() => {deactivateEditMode()}}\n                       value={status}\n                       onChange={onStatusChange}/>\n            </div>\n            }\n        </div>\n\n    )\n}\n\nexport default ProfileStatusWithHooks;","import style from './ProfileInfo.module.css'\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport ProfileStatus from \"./ProfileStatus\";\n\n\nlet ProfileInfo = (props) => {\n    if(!props.profile){\n        return (\n            <Preloader/>\n        )\n    }\n    return(<div className={style.wallpaper}>\n        <div className={style.description}>\n            <img className={style.userphoto} src={props.profile.photos.large ? props.profile.photos.large : 'https://homemania.ru/img/noavatar.png'}/>\n            <div className={style.name}>{props.profile.fullName}</div>\n            <ProfileStatus status={props.status} updateStatus = {props.updateStatus}/>\n        </div>\n    </div>)\n}\n\nexport default ProfileInfo;","import s from './Profile.module.css'\nimport MyPostsContainer from \"./MyPosts/MyPosts-container\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nconst Profile = (props) => {\n    return (\n        <ul>\n            <ProfileInfo profile = {props.profile} status = {props.status} updateStatus = {props.updateStatus}/>\n            <MyPostsContainer store = {props.store} />\n        </ul>\n    )\n}\n\nexport default Profile;\n\n","import React from \"react\";\nimport Profile from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, getProfile, setUserProfile, updateStatus} from \"../../redux/profile-reducer\";\nimport {withRouter} from \"react-router\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\nimport {getAuthUserData} from \"../../redux/auth-reducer\";\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\n\nlet mapStateToProps = (state) => ({\n    profile: state.profilePage.profile,\n    status: state.profilePage.status,\n    isAuth: state.auth.isAuth,\n    authUserId: state.auth.userId\n})\n\nclass ProfileContainer extends React.Component{\n\n    componentDidMount() {\n        let uID=this.props.match.params.userID;\n        if (!uID) uID=this.props.authUserId;\n        console.log(\"Mount\");\n        this.props.getProfile(uID);\n        this.props.getStatus(uID);\n    }\n    componentWillUnmount(){\n        console.log(\"Unmount\")\n    }\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if(prevProps.match.params.userID !== this.props.match.params.userID){\n            this.props.getProfile(this.props.match.params.userID);\n            this.props.getStatus(this.props.match.params.userID);\n        }\n    }\n    render() {\n        return (\n            <div>\n                <Profile {...this.props} profile = {this.props.profile} status = {this.props.status} updateStatus = {this.props.updateStatus} />\n            </div>\n        )\n\n    }\n}\nexport default compose (\n    connect(mapStateToProps, {\n        setUserProfile,\n        getProfile,\n        getStatus,\n        updateStatus,\n        getAuthUserData\n    }),\n    withAuthRedirect,\n    withRouter\n) (ProfileContainer);\n","import s from './Header.module.css'\nimport {NavLink} from \"react-router-dom\";\n\nconst Header = (props) => {\n    return(\n        <div className={s.header}>\n            <div align=\"right\">\n                <img className={s.ava} src = {props.photo ? props.photo : 'https://homemania.ru/img/noavatar.png'}/>\n                {props.isAuth ?\n                    <button onClick={props.logout}>Logout</button>\n                    : <NavLink to={'/login'}/>\n                }\n            </div>\n            <div className={s.d1}><h3><span>RUSSbook</span></h3></div>\n            <div align=\"left\" className={s.log}><h4><span>{props.login}</span></h4></div>\n        </div>\n    )\n}\n\nexport default Header;","import React from \"react\";\nimport {connect} from \"react-redux\";\nimport {setProfileHeader, setUserInfo, setUserPhoto} from \"../../redux/header-reducer\";\nimport Header from \"./Header\";\nimport {getAuthUserData, logout} from \"../../redux/auth-reducer\";\n\nlet mapStateToProps = (state) => ({\n    userPhoto: state.headerPage.userPhoto,\n    isAuth: state.auth.isAuth,\n    login: state.auth.login\n\n})\n\nclass HeaderContainer extends React.Component{\n    componentDidMount() {\n        this.props.setProfileHeader();\n\n    }\n    render(){\n        return (\n            <Header {...this.props} login = {this.props.login} photo = {this.props.userPhoto}/>\n        )\n    }\n}\n\nexport default connect(mapStateToProps, {\n    setUserInfo,\n    setUserPhoto,\n    setProfileHeader,\n    logout\n})(HeaderContainer);","import React from 'react';\nimport {Field, reduxForm} from \"redux-form\";\nimport {CheckBox, TextArea} from \"../common/FormsControls/FormsControls\";\nimport {maxLengthCreator, requered} from \"../../utils/Validator\";\nimport {Redirect} from \"react-router-dom\";\nimport style from '../../components/common/FormsControls/FormControls.module.css'\nconst maxLength10 = maxLengthCreator(20);\n\nconst LoginForm = (props) => {\n    return (\n            <form onSubmit={props.handleSubmit} action=\"\" >\n                <div>\n                    <div><Field component={TextArea} name={'email'} placeholder={'login'} validate={[requered, maxLength10]}/></div>\n                    <div><Field component={TextArea} name={'password'} placeholder={'password'} validate={[requered, maxLength10]}/></div>\n                    <div><Field component={CheckBox} name={'rememberMe'} type={'checkbox'}/> Remember me</div>\n                </div>\n                { props.error && <div className={style.formSummaryError}>\n                    {props.error}\n                </div>}\n                <div>\n                    <button type={\"submit\"} align={'left'}>Login</button>\n                    <button type={\"button\"} align={'right'}>Log out</button>\n                </div>\n            </form>\n    )\n}\n\nconst ReduxLoginForm = reduxForm ({\n    form: 'loginForm'\n})(LoginForm)\n\nconst Login = (props) => {\n    const onSubmit = (formData) => {\n        props.login(formData.email, formData.password, formData.rememberMe);\n        console.log(formData)\n    }\n    if (props.isAuth){\n        return <Redirect to={'/profile'}/>\n    }\n    return (\n        <div>\n            <ReduxLoginForm onSubmit={onSubmit}/>\n        </div>\n    )\n}\n\nexport default Login;","import React from 'react';\nimport Login from \"./Login\";\nimport {connect} from \"react-redux\";\nimport {login, logout} from \"../../redux/auth-reducer\";\n\nclass LoginContainer extends React.Component {\n    render(){\n        return (\n            <Login {...this.props}/>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => ({\n    email: state.auth.email,\n    password: state.auth.password,\n    rememberMe: state.auth.rememberMe,\n    isAuth: state.auth.isAuth\n})\n\nexport default connect (mapStateToProps, {\n    login,\n    logout}\n)(LoginContainer)","import './App.css';\nimport NavContainer from './components/Nav/Nav-container'\nimport {BrowserRouter, Route, withRouter} from \"react-router-dom\"\nimport React from 'react'\nimport ProfileContainer from \"./components/Profile/Profile-container\";\nimport HeaderContainer from \"./components/Header/Header-Container\";\nimport LoginContainer from \"./components/Login/LoginContainer\";\nimport {Component} from \"react\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport Preloader from \"./components/common/Preloader/Preloader\";\nimport {initializeApp} from \"./redux/app-reducer\";\nconst DialogsContainer = React.lazy(() => import('./components/Dialogs/Dialogs-Conteiner'));\nconst UserContainer = React.lazy(() => import('./components/Users/Users-Container'));\n\n\nclass App extends Component {\n    componentDidMount() {\n        this.props.initializeApp();\n    }\n\n    render() {\n        if (this.props.initialized){\n            return (\n            <BrowserRouter>\n                <div className='site-wrapper'>\n                    <HeaderContainer/>\n                    <NavContainer store={this.props.store}/>\n                    <div className='site-wrapper-content'>\n                        <React.Suspense fallback={<Preloader/>}>\n                            <Route exact path='/dialogs'> <DialogsContainer store={this.props.store}/></Route>\n                        </React.Suspense>\n                        <Route exact path='/profile/:userID?'><ProfileContainer store={this.props.store}/></Route>\n                        <React.Suspense fallback={<Preloader/>}>\n                            <Route exact path='/users'\n                                   render={() => <UserContainer key='UserContainer' store={this.props.store}/>}/>\n                        </React.Suspense>\n                        <Route exact path='/login'\n                               render={() => <LoginContainer key='LoginContainer' store={this.props.store}/>}/>\n                    </div>\n                </div>\n            </BrowserRouter>\n        );}\n        else {\n            return <Preloader/>\n        }\n\n    }\n}\nconst mapStateToProps = (state) => ({\n    initialized: state.app.initialized\n})\n\nexport default compose(\n    connect(mapStateToProps, {initializeApp}))(App);\n\n\n","import reportWebVitals from './reportWebVitals';\nimport store from \"./redux/redux-store\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport React from \"react\";\nimport {Provider} from \"react-redux\";\n\n\nexport let rendererer = () => {\n    return(\n        ReactDOM.render(\n            <React.StrictMode>\n                <Provider store={store}>\n                    <App />\n                </Provider>\n            </React.StrictMode>,\n            document.getElementById('root')\n        )\n    )\n}\nstore.subscribe(rendererer);\nrendererer();\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n","export const maxLengthCreator = (max) => (value)=>{\n    if (value.length > max){\n        return `Value is more then ${max}`;\n    }\n    return undefined;\n}\nexport const requered = (value) => {\n    if (!value) return \"Value is required!\"\n    return undefined;\n}","import React from \"react\";\nimport 'antd/dist/antd.css';\nimport styles from './FormControls.module.css'\nimport { SmileOutlined } from '@ant-design/icons';\nimport { Form, Input, DatePicker, TimePicker, Select, Cascader, InputNumber } from 'antd';\n\nconst FormControl = ({input, meta, ...props}) => {\n    const hasError = meta.touched && meta.error;\n    return (\n        <div className={styles.formControl +\" \"+( hasError ? styles.error : \"\")}>\n            <div>\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nexport const TextArea = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\n}\nexport const CheckBox = (props) => {\n    const {input, meta, child, ...restProps} = props;\n    return <FormControl {...props}><input {...input} {...restProps}/></FormControl>\n}","import React from \"react\";\nimport { Spin, Alert } from 'antd';\nimport s from './Preloader.module.css'\n\nlet Preloader = (props) => {\n    return(\n        <div className={s.preloader}>\n            <Spin  tip=\"Loading...\" >\n                <Alert\n                    message=\"Пожалуйста, подождите\"\n                    description=\"Идет загрузка информации.\"\n                    type=\"info\"\n                />\n            </Spin>\n        </div>\n    )\n}\n\nexport default Preloader;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__2SPvv\",\"error\":\"FormControls_error__3zfBa\",\"formSummaryError\":\"FormControls_formSummaryError__2ffxR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userphoto\":\"ProfileInfo_userphoto__Mkeme\",\"description\":\"ProfileInfo_description__2yWda\",\"wallpaper\":\"ProfileInfo_wallpaper__1teYi\",\"name\":\"ProfileInfo_name__1VvQB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1VCKf\",\"ava\":\"Header_ava__1jVPU\",\"log\":\"Header_log__mxIf0\",\"d1\":\"Header_d1__3OQvB\"};"],"sourceRoot":""}