{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Dialog/Dialog.module.css","components/Dialogs/Messages/Messages.module.css","components/Dialogs/Messages/Message/Message.module.css","components/Dialogs/Dialog/Dialog.js","components/Dialogs/Messages/Message/Message.js","components/Dialogs/Messages/Messages.js","components/Dialogs/Messages/Messages-container.js","components/Dialogs/Dialogs.js","components/Dialogs/Dialogs-Conteiner.js"],"names":["module","exports","Dialog","props","to","name","className","s","dialog","Message","prop","message","maxLength10","maxLengthCreator","ReduxMessageForm","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","requered","button","Messages","MessageDataMap","messagesData","map","el","values","addMessage","newMessageBody","console","log","MessagesContainer","connect","state","newMessageText","messagesPage","dispatch","onMessageChange","text","updateTextMessageAction","addMessageAction","Dialogs","DialogDataMap","dialogsData","dialogs","dialogsItem","store","compose","dialogsPage","isAuth","auth","withAuthRedirect"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,YAAc,+B,oBCAnED,EAAOC,QAAU,CAAC,OAAS,yB,oBCA3BD,EAAOC,QAAU,CAAC,SAAW,2BAA2B,OAAS,2B,oBCAjED,EAAOC,QAAU,CAAC,QAAU,2B,+FCUbC,EATA,SAACC,GACZ,OACI,8BACA,cAAC,IAAD,CAASC,GAAI,YAAYD,EAAME,KAAMC,UAAWC,IAAEC,OAAlD,SACKL,EAAME,U,oCCAJI,EALC,SAACC,GACb,OACI,sBAAKJ,UAAWC,IAAEI,QAAlB,cAA6BD,EAAKC,QAAlC,Q,yCCMFC,EAAcC,YAAiB,IAkB/BC,EAAmBC,YAAU,CAACC,KAAM,yBAAjBD,EAhBH,SAACZ,GACnB,OACI,uBAAMc,SAAUd,EAAMe,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IACXhB,KAAM,iBACNiB,YAAa,eACbC,SAAU,CAACC,IAAUZ,OAEhC,8BACI,wBAAQN,UAAWC,IAAEkB,OAArB,8BA+BDC,EAvBG,SAACvB,GACf,IAAIwB,EAAiBxB,EAAMyB,aAAaC,KAAK,SAACC,GACtC,OACI,cAAC,EAAD,CAASnB,QAAWmB,EAAGnB,aAQnC,OACI,gCACI,8BACKgB,IAEL,8BACI,cAACb,EAAD,CAAkBG,SAVf,SAACc,GACZ5B,EAAM6B,WAAWD,EAAOE,gBACxBC,QAAQC,IAAIJ,EAAOE,yB,iBCVZG,EAHWC,aAlBJ,SAACC,GACnB,MAAO,CACCC,eAAgBD,EAAME,aAAaD,eACnCX,aAAeU,EAAME,aAAaZ,iBAIrB,SAACa,GACtB,MAAM,CACFC,gBAAkB,SAACC,GACfF,EAASG,YAAwBD,KAErCX,WAAa,SAACW,GACVF,EAASI,YAAiBF,QAKZN,CAA6CX,GCExDoB,EAtBC,SAAC3C,GACb,IAAI4C,EAAgB5C,EAAM6C,YAAYnB,KAAK,SAACC,GACxC,OACI,cAAC,EAAD,CAAQzB,KAAMyB,EAAGzB,UAKzB,OACI,sBAAKC,UAAWC,IAAE0C,QAAlB,UACI,qBAAK3C,UAAWC,IAAE2C,YAAlB,SACKH,IAEL,8BACI,cAAC,EAAD,CAAmBI,MAAShD,EAAMgD,c,iBCNnCC,sBACXf,aANkB,SAACC,GAAD,MAAY,CAC1BU,YAAYV,EAAMe,YAAYL,YAC9BM,OAAQhB,EAAMiB,KAAKD,WAKvBE,IAFWJ,CAGbN","file":"static/js/4.5287c2ad.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsItem\":\"Dialogs_dialogsItem__8wYI2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialog\":\"Dialog_dialog__1323i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Messages_messages__xQGJY\",\"button\":\"Messages_button__1iE_n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Message_message__2XMh9\"};","import s from './Dialog.module.css'\nimport {NavLink} from \"react-router-dom\";\nconst Dialog = (props) => {\n    return(\n        <div>\n        <NavLink to={\"/dialogs/\"+props.name} className={s.dialog}>\n            {props.name}\n        </NavLink>\n        </div>\n    )\n}\nexport default Dialog;","import s from './Message.module.css'\nconst Message = (prop) => {\n    return (\n        <div className={s.message}> {prop.message} </div>\n    )\n}\nexport default Message;","import s from './Messages.module.css'\nimport Message from './Message/Message'\nimport React from \"react\";\nimport {Field, reduxForm} from \"redux-form\";\nimport {maxLengthCreator, requered} from \"../../../utils/Validator\";\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\n\n\n\nconst maxLength10 = maxLengthCreator(10);\n\nconst addMessageForm =(props) => {\n    return(\n        <form onSubmit={props.handleSubmit}>\n            <div>\n                <Field component={TextArea}\n                       name={'newMessageBody'}\n                       placeholder={'New messsage'}\n                       validate={[requered, maxLength10]}/>\n            </div>\n            <div>\n                <button className={s.button}>Add post</button>\n            </div>\n        </form>\n    )\n}\n\nconst ReduxMessageForm = reduxForm({form: 'dialogsAddMessageForm'})(addMessageForm);\n\nconst Messages =  (props) => {\n    let MessageDataMap = props.messagesData.map( (el)=>{\n            return(\n                <Message message = {el.message}/>\n            )\n        }\n    )\n    let onSubmit = (values) => {\n        props.addMessage(values.newMessageBody)\n        console.log(values.newMessageBody)\n    }\n    return (\n        <div>\n            <div>\n                {MessageDataMap}\n            </div>\n            <div>\n                <ReduxMessageForm onSubmit={onSubmit}/>\n            </div>\n        </div>\n    )\n}\n\nexport default Messages;","import Messages from \"./Messages\";\nimport {addMessageAction, updateTextMessageAction} from \"../../../redux/message-reducer\";\nimport {connect} from \"react-redux\";\n\n\n\n\nlet mapStateToProps = (state) =>{\n    return({\n            newMessageText: state.messagesPage.newMessageText,\n            messagesData : state.messagesPage.messagesData\n        }\n    )\n}\nlet mapDispatchToProps = (dispatch) =>{\n    return{\n        onMessageChange : (text) => {\n            dispatch(updateTextMessageAction(text))\n        },\n        addMessage : (text) => {\n            dispatch(addMessageAction(text))\n        }\n    }\n}\n\nconst MessagesContainer = connect(mapStateToProps, mapDispatchToProps)(Messages);\n\n\nexport default MessagesContainer;","import s from './Dialogs.module.css'\nimport Dialog from \"./Dialog/Dialog\";\nimport MessagesContainer from \"./Messages/Messages-container\";\n\n\nconst Dialogs = (props) => {\n    let DialogDataMap = props.dialogsData.map( (el)=> {\n        return (\n            <Dialog name={el.name}/>\n        )\n    }\n    )\n\n    return(\n        <div className={s.dialogs}>\n            <div className={s.dialogsItem}>\n                {DialogDataMap}\n            </div>\n            <div>\n                <MessagesContainer store = {props.store}/>\n            </div>\n        </div>\n    );\n}\n\n\n\nexport default Dialogs;\n\n","import Dialogs from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\n\n\nlet mapStateToProps = (state) => ({\n        dialogsData:state.dialogsPage.dialogsData,\n        isAuth: state.auth.isAuth\n    });\n\nexport default compose(\n    connect(mapStateToProps),\n    withAuthRedirect\n)(Dialogs);\n"],"sourceRoot":""}